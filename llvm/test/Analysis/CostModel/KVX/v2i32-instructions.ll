; NOTE: Assertions have been autogenerated by utils/update_analyze_test_checks.py
; RUN: opt -mcpu=kv3-1 -mtriple=kvx-kalray-cos -passes='print<cost-model>' -cost-kind=throughput -disable-output %s 2>&1 | FileCheck %s --check-prefix=CV1
; RUN: opt -mcpu=kv3-2 -mtriple=kvx-kalray-cos -passes='print<cost-model>' -cost-kind=throughput -disable-output %s 2>&1 | FileCheck %s --check-prefix=CV2

target triple = "kvx-kalray-cos"

define <2 x i32> @test_ret_const() {
; CV1-LABEL: 'test_ret_const'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> <i32 1, i32 2>
;
; CV2-LABEL: 'test_ret_const'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> <i32 1, i32 2>
;
  ret <2 x i32> <i32 1, i32 2>
}

define i32 @test_extract_0(<2 x i32> %a) {
; CV1-LABEL: 'test_extract_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %e = extractelement <2 x i32> %a, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i32 %e
;
; CV2-LABEL: 'test_extract_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %e = extractelement <2 x i32> %a, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i32 %e
;
  %e = extractelement <2 x i32> %a, i32 0
  ret i32 %e
}

define i32 @test_extract_1(<2 x i32> %a) {
; CV1-LABEL: 'test_extract_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <2 x i32> %a, i32 1
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i32 %e
;
; CV2-LABEL: 'test_extract_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <2 x i32> %a, i32 1
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i32 %e
;
  %e = extractelement <2 x i32> %a, i32 1
  ret i32 %e
}

define i32 @test_extract_i(<2 x i32> %a, i64 %idx) {
; CV1-LABEL: 'test_extract_i'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <2 x i32> %a, i64 %idx
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i32 %e
;
; CV2-LABEL: 'test_extract_i'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <2 x i32> %a, i64 %idx
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i32 %e
;
  %e = extractelement <2 x i32> %a, i64 %idx
  ret i32 %e
}

define <2 x i32> @test_add(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_add'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_add'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = add <2 x i32> %a, %b
  ret <2 x i32> %r
}

define <2 x i32> @test_add_imm_0(<2 x i32> %a) {
; CV1-LABEL: 'test_add_imm_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <2 x i32> <i32 1, i32 2>, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_add_imm_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <2 x i32> <i32 1, i32 2>, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = add <2 x i32> <i32 1, i32 2>, %a
  ret <2 x i32> %r
}

define <2 x i32> @test_add_imm_1(<2 x i32> %a) {
; CV1-LABEL: 'test_add_imm_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <2 x i32> %a, <i32 1, i32 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_add_imm_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <2 x i32> %a, <i32 1, i32 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = add <2 x i32> %a, <i32 1, i32 2>
  ret <2 x i32> %r
}

define <2 x i32> @test_sub(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_sub'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_sub'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = sub <2 x i32> %a, %b
  ret <2 x i32> %r
}

define <2 x i32> @test_sub_imm(<2 x i32> %a) {
; CV1-LABEL: 'test_sub_imm'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <2 x i32> %a, <i32 1, i32 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_sub_imm'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <2 x i32> %a, <i32 1, i32 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = sub <2 x i32> %a, <i32 1, i32 2>
  ret <2 x i32> %r
}

define <2 x i32> @test_sub_fromimm(<2 x i32> %a) {
; CV1-LABEL: 'test_sub_fromimm'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <2 x i32> <i32 1, i32 2>, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_sub_fromimm'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <2 x i32> <i32 1, i32 2>, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = sub <2 x i32> <i32 1, i32 2>, %a
  ret <2 x i32> %r
}


define <2 x i32> @test_fma(<2 x i32> %a, <2 x i32> %b, <2 x i32> %c) {
; CV1-LABEL: 'test_fma'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <2 x i32> %b, %c
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <2 x i32> %a, %m
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %ad
;
; CV2-LABEL: 'test_fma'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <2 x i32> %b, %c
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <2 x i32> %a, %m
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %ad
;
  %m = mul <2 x i32> %b, %c
  %ad = add <2 x i32> %a, %m
  ret <2 x i32> %ad
}

define <2 x i32> @test_fma_imm(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_fma_imm'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <2 x i32> <i32 5, i32 2>, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <2 x i32> %a, %m
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %ad
;
; CV2-LABEL: 'test_fma_imm'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <2 x i32> <i32 5, i32 2>, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <2 x i32> %a, %m
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %ad
;
  %m = mul <2 x i32> <i32 5, i32 2>, %b
  %ad = add <2 x i32> %a, %m
  ret <2 x i32> %ad
}

define <2 x i32> @test_fma_imm_2(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_fma_imm_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <2 x i32> <i32 1, i32 2>, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <2 x i32> %a, %m
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %ad
;
; CV2-LABEL: 'test_fma_imm_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <2 x i32> <i32 1, i32 2>, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <2 x i32> %a, %m
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %ad
;
  %m = mul <2 x i32> <i32 1, i32 2>, %b
  %ad = add <2 x i32> %a, %m
  ret <2 x i32> %ad
}

define <2 x i32> @test_neg(<2 x i32> %a) {
; CV1-LABEL: 'test_neg'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <2 x i32> zeroinitializer, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_neg'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <2 x i32> zeroinitializer, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = sub <2 x i32> <i32 0, i32 0>, %a
  ret <2 x i32> %r
}

define <2 x i32> @test_mul(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_mul'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = mul <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_mul'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = mul <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = mul <2 x i32> %a, %b
  ret <2 x i32> %r
}

define <2 x i32> @test_mul_2(<2 x i32> %a, <2 x i32> %b, <2 x i32> %c) {
; CV1-LABEL: 'test_mul_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = mul <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r1 = mul <2 x i32> %r, %c
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r1
;
; CV2-LABEL: 'test_mul_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = mul <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r1 = mul <2 x i32> %r, %c
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r1
;
  %r = mul <2 x i32> %a, %b
  %r1 = mul <2 x i32> %r, %c
  ret <2 x i32> %r1
}

define <2 x i32> @test_div(<2 x i32> %a, <2 x i32> %b) #0 {
; CV1-LABEL: 'test_div'
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %r = sdiv <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_div'
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %r = sdiv <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = sdiv <2 x i32> %a, %b
  ret <2 x i32> %r
}

define <2 x i32> @test_rem(<2 x i32> %a, <2 x i32> %b) #0 {
; CV1-LABEL: 'test_rem'
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %r = srem <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_rem'
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %r = srem <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = srem <2 x i32> %a, %b
  ret <2 x i32> %r
}

define void @test_ldst_v2i32(<2 x i32>* %a, <2 x i32>* %b) {
; CV1-LABEL: 'test_ldst_v2i32'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %t1 = load <2 x i32>, <2 x i32>* %a, align 8
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <2 x i32> %t1, <2 x i32>* %b, align 16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
; CV2-LABEL: 'test_ldst_v2i32'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %t1 = load <2 x i32>, <2 x i32>* %a, align 8
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <2 x i32> %t1, <2 x i32>* %b, align 16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
  %t1 = load <2 x i32>, <2 x i32>* %a
  store <2 x i32> %t1, <2 x i32>* %b, align 16
  ret void
}

declare <2 x i32> @test_callee(<2 x i32> %a, <2 x i32> %b)

define <2 x i32> @test_call(<2 x i32> %a, <2 x i32> %b) #0 {
; CV1-LABEL: 'test_call'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <2 x i32> @test_callee(<2 x i32> %a, <2 x i32> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_call'
; CV2-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <2 x i32> @test_callee(<2 x i32> %a, <2 x i32> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = call <2 x i32> @test_callee(<2 x i32> %a, <2 x i32> %b)
  ret <2 x i32> %r
}

define <2 x i32> @test_call_flipped(<2 x i32> %a, <2 x i32> %b) #0 {
; CV1-LABEL: 'test_call_flipped'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <2 x i32> @test_callee(<2 x i32> %b, <2 x i32> %a)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_call_flipped'
; CV2-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <2 x i32> @test_callee(<2 x i32> %b, <2 x i32> %a)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = call <2 x i32> @test_callee(<2 x i32> %b, <2 x i32> %a)
  ret <2 x i32> %r
}

define <2 x i32> @test_tailcall_flipped(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_tailcall_flipped'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = tail call <2 x i32> @test_callee(<2 x i32> %b, <2 x i32> %a)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_tailcall_flipped'
; CV2-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = tail call <2 x i32> @test_callee(<2 x i32> %b, <2 x i32> %a)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = tail call <2 x i32> @test_callee(<2 x i32> %b, <2 x i32> %a)
  ret <2 x i32> %r
}

define <2 x i32> @test_select(<2 x i32> %a, <2 x i32> %b, i1 zeroext %c) {
; CV1-LABEL: 'test_select'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select i1 %c, <2 x i32> %a, <2 x i32> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_select'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select i1 %c, <2 x i32> %a, <2 x i32> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = select i1 %c, <2 x i32> %a, <2 x i32> %b
  ret <2 x i32> %r
}

define <2 x i32> @test_select_cc(<2 x i32> %a, <2 x i32> %b, <2 x i32> %c, <2 x i32> %d) {
; CV1-LABEL: 'test_select_cc'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp slt <2 x i32> %c, %d
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select <2 x i1> %cc, <2 x i32> %a, <2 x i32> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_select_cc'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp slt <2 x i32> %c, %d
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select <2 x i1> %cc, <2 x i32> %a, <2 x i32> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %cc = icmp slt <2 x i32> %c, %d
  %r = select <2 x i1> %cc, <2 x i32> %a, <2 x i32> %b
  ret <2 x i32> %r
}

define <2 x i64> @test_select_cc_f32_f32(<2 x i64> %a, <2 x i64> %b, <2 x i32> %c, <2 x i32> %d) {
; CV1-LABEL: 'test_select_cc_f32_f32'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp ult <2 x i32> %c, %d
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select <2 x i1> %cc, <2 x i64> %a, <2 x i64> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i64> %r
;
; CV2-LABEL: 'test_select_cc_f32_f32'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp ult <2 x i32> %c, %d
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select <2 x i1> %cc, <2 x i64> %a, <2 x i64> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i64> %r
;
  %cc = icmp ult <2 x i32> %c, %d
  %r = select <2 x i1> %cc, <2 x i64> %a, <2 x i64> %b
  ret <2 x i64> %r
}

define <2 x i1> @test_icmp_ule(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_icmp_ule'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ule <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
; CV2-LABEL: 'test_icmp_ule'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ule <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
  %r = icmp ule <2 x i32> %a, %b
  ret <2 x i1> %r
}

define <2 x i1> @test_icmp_slt(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_icmp_slt'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp slt <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
; CV2-LABEL: 'test_icmp_slt'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp slt <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
  %r = icmp slt <2 x i32> %a, %b
  ret <2 x i1> %r
}

define <2 x i1> @test_icmp_ugt(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_icmp_ugt'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ugt <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
; CV2-LABEL: 'test_icmp_ugt'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ugt <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
  %r = icmp ugt <2 x i32> %a, %b
  ret <2 x i1> %r
}

define <2 x i1> @test_icmp_uge(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_icmp_uge'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp uge <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
; CV2-LABEL: 'test_icmp_uge'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp uge <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
  %r = icmp uge <2 x i32> %a, %b
  ret <2 x i1> %r
}

define <2 x i1> @test_icmp_ult(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'test_icmp_ult'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ult <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
; CV2-LABEL: 'test_icmp_ult'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ult <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i1> %r
;
  %r = icmp ult <2 x i32> %a, %b
  ret <2 x i1> %r
}

define <2 x i64> @test_sext_2xi64(<2 x i32> %a) {
; CV1-LABEL: 'test_sext_2xi64'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sext <2 x i32> %a to <2 x i64>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i64> %r
;
; CV2-LABEL: 'test_sext_2xi64'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sext <2 x i32> %a to <2 x i64>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i64> %r
;
  %r = sext <2 x i32> %a to <2 x i64>
  ret <2 x i64> %r
}

declare <2 x i32> @llvm.abs.v2i32(<2 x i32>, i1) #0

define <2 x i32> @test_abs(<2 x i32> %a) {
; CV1-LABEL: 'test_abs'
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %r = call <2 x i32> @llvm.abs.v2i32(<2 x i32> %a, i1 false)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_abs'
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %r = call <2 x i32> @llvm.abs.v2i32(<2 x i32> %a, i1 false)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = call <2 x i32> @llvm.abs.v2i32(<2 x i32> %a, i1 false)
  ret <2 x i32> %r
}

define <2 x i32> @test_insertelement0(<2 x i32> %a, i32 %x) {
; CV1-LABEL: 'test_insertelement0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %i = insertelement <2 x i32> %a, i32 %x, i64 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %i
;
; CV2-LABEL: 'test_insertelement0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %i = insertelement <2 x i32> %a, i32 %x, i64 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %i
;
  %i = insertelement <2 x i32> %a, i32 %x, i64 0
  ret <2 x i32> %i
}

define <2 x i32> @test_insertelement1(<2 x i32> %a, i32 %x) {
; CV1-LABEL: 'test_insertelement1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <2 x i32> %a, i32 %x, i64 1
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %i
;
; CV2-LABEL: 'test_insertelement1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <2 x i32> %a, i32 %x, i64 1
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %i
;
  %i = insertelement <2 x i32> %a, i32 %x, i64 1
  ret <2 x i32> %i
}

define <2 x i32> @test_insertelement(<2 x i32> %a, i32 %x, i64 %p) {
; CV1-LABEL: 'test_insertelement'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <2 x i32> %a, i32 %x, i64 %p
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %i
;
; CV2-LABEL: 'test_insertelement'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <2 x i32> %a, i32 %x, i64 %p
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %i
;
  %i = insertelement <2 x i32> %a, i32 %x, i64 %p
  ret <2 x i32> %i
}

define <2 x i32> @mulsub(<2 x i32> %a, <2 x i32> %b, <2 x i32> %c) {
; CV1-LABEL: 'mulsub'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul <2 x i32> %b, %c
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %sub = sub <2 x i32> %a, %mul
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %sub
;
; CV2-LABEL: 'mulsub'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul <2 x i32> %b, %c
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %sub = sub <2 x i32> %a, %mul
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %sub
;
  %mul = mul <2 x i32> %b, %c
  %sub = sub <2 x i32> %a, %mul
  ret <2 x i32> %sub
}

define <2 x i32> @vnot(<2 x i32> %a) {
; CV1-LABEL: 'vnot'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %vnot = xor <2 x i32> %a, <i32 -1, i32 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %vnot
;
; CV2-LABEL: 'vnot'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %vnot = xor <2 x i32> %a, <i32 -1, i32 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %vnot
;
  %vnot = xor <2 x i32> %a, <i32 -1, i32 -1>
  ret <2 x i32> %vnot
}

define <2 x i32> @shuffle_v2i32_0_0(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_0_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_0_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 0>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_0_1(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_0_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_0_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 1>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_0_2(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_0_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_0_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 2>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_0_3(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_0_3'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 3>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_0_3'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 3>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 0, i32 3>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_1_0(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_1_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_1_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 0>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_1_1(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_1_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_1_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 1>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_1_2(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_1_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_1_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 2>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_1_3(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_1_3'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 3>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_1_3'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 3>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 1, i32 3>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_2_0(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_2_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_2_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 0>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_2_1(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_2_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_2_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 1>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_2_2(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_2_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_2_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 2>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_2_3(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_2_3'
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 3>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_2_3'
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 3>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 2, i32 3>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_3_0(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_3_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_3_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 0>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_3_1(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_3_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_3_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 1>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_3_2(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_3_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_3_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 2>
  ret <2 x i32> %2
}

define <2 x i32> @shuffle_v2i32_3_3(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'shuffle_v2i32_3_3'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 3>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'shuffle_v2i32_3_3'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 3>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
entry:
  %2 = shufflevector <2 x i32> %0, <2 x i32> %1, <2 x i32> <i32 3, i32 3>
  ret <2 x i32> %2
}

define <2 x i32> @lnand(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'lnand'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %3 = icmp eq <2 x i32> %0, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <2 x i32> %1, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = or <2 x i1> %4, %3
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %6 = zext <2 x i1> %5 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %6
;
; CV2-LABEL: 'lnand'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %3 = icmp eq <2 x i32> %0, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <2 x i32> %1, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = or <2 x i1> %4, %3
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %6 = zext <2 x i1> %5 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %6
;
  %3 = icmp eq <2 x i32> %0, zeroinitializer
  %4 = icmp eq <2 x i32> %1, zeroinitializer
  %5 = or <2 x i1> %4, %3
  %6 = zext <2 x i1> %5 to <2 x i32>
  ret <2 x i32> %6
}

define <2 x i32> @lnandn(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'lnandn'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %3 = icmp eq <2 x i32> %0, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <2 x i32> %1, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = or <2 x i1> %4, %3
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %6 = sext <2 x i1> %5 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %6
;
; CV2-LABEL: 'lnandn'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %3 = icmp eq <2 x i32> %0, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <2 x i32> %1, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = or <2 x i1> %4, %3
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %6 = sext <2 x i1> %5 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %6
;
  %3 = icmp eq <2 x i32> %0, zeroinitializer
  %4 = icmp eq <2 x i32> %1, zeroinitializer
  %5 = or <2 x i1> %4, %3
  %6 = sext <2 x i1> %5 to <2 x i32>
  ret <2 x i32> %6
}

define <2 x i32> @lor(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'lor'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <2 x i32> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp ne <2 x i32> %3, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = zext <2 x i1> %4 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %5
;
; CV2-LABEL: 'lor'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <2 x i32> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp ne <2 x i32> %3, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = zext <2 x i1> %4 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %5
;
  %3 = or <2 x i32> %1, %0
  %4 = icmp ne <2 x i32> %3, zeroinitializer
  %5 = zext <2 x i1> %4 to <2 x i32>
  ret <2 x i32> %5
}

define <2 x i32> @lorneg(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'lorneg'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <2 x i32> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp ne <2 x i32> %3, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = sext <2 x i1> %4 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %5
;
; CV2-LABEL: 'lorneg'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <2 x i32> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp ne <2 x i32> %3, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = sext <2 x i1> %4 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %5
;
  %3 = or <2 x i32> %1, %0
  %4 = icmp ne <2 x i32> %3, zeroinitializer
  %5 = sext <2 x i1> %4 to <2 x i32>
  ret <2 x i32> %5
}

define <2 x i32> @lnor(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'lnor'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <2 x i32> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <2 x i32> %3, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = zext <2 x i1> %4 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %5
;
; CV2-LABEL: 'lnor'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <2 x i32> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <2 x i32> %3, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = zext <2 x i1> %4 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %5
;
  %3 = or <2 x i32> %1, %0
  %4 = icmp eq <2 x i32> %3, zeroinitializer
  %5 = zext <2 x i1> %4 to <2 x i32>
  ret <2 x i32> %5
}

define <2 x i32> @lnorneg(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'lnorneg'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <2 x i32> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <2 x i32> %3, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = sext <2 x i1> %4 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %5
;
; CV2-LABEL: 'lnorneg'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <2 x i32> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <2 x i32> %3, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = sext <2 x i1> %4 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %5
;
  %3 = or <2 x i32> %1, %0
  %4 = icmp eq <2 x i32> %3, zeroinitializer
  %5 = sext <2 x i1> %4 to <2 x i32>
  ret <2 x i32> %5
}


define <2 x i32> @abdwp_rr(<2 x i32> %a, <2 x i32> %b) {
; CV1-LABEL: 'abdwp_rr'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %sub = sub nsw <2 x i32> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %0 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %sub, i1 true)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %0
;
; CV2-LABEL: 'abdwp_rr'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %sub = sub nsw <2 x i32> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %0 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %sub, i1 true)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %0
;
entry:
  %sub = sub nsw <2 x i32> %a, %b
  %0 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %sub, i1 true)
  ret <2 x i32> %0
}

define <2 x i32> @abdwp_not_ri(<2 x i32> %0) {
; CV1-LABEL: 'abdwp_not_ri'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <2 x i32> <i32 15, i32 16>, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2, i1 true)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
; CV2-LABEL: 'abdwp_not_ri'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <2 x i32> <i32 15, i32 16>, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2, i1 true)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
  %2 = sub nsw <2 x i32> <i32 15, i32 16>, %0
  %3 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2, i1 true)
  ret <2 x i32> %3
}

define <2 x i32> @abdwp_ri_(<2 x i32> %0) {
; CV1-LABEL: 'abdwp_ri_'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <2 x i32> <i32 15, i32 0>, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2, i1 true)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
; CV2-LABEL: 'abdwp_ri_'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <2 x i32> <i32 15, i32 0>, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2, i1 true)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
  %2 = sub nsw <2 x i32> <i32 15, i32 0>, %0
  %3 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2, i1 true)
  ret <2 x i32> %3
}

define <2 x i32> @abdwp_ri_at(<2 x i32> %0) {
; CV1-LABEL: 'abdwp_ri_at'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <2 x i32> <i32 15, i32 15>, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2, i1 true)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
; CV2-LABEL: 'abdwp_ri_at'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <2 x i32> <i32 15, i32 15>, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2, i1 true)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
  %2 = sub nsw <2 x i32> <i32 15, i32 15>, %0
  %3 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2, i1 true)
  ret <2 x i32> %3
}

define <2 x i32> @nandd_v2i32_rr(<2 x i32> %0, <2 x i32> %1) {
; CV1-LABEL: 'nandd_v2i32_rr'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = and <2 x i32> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = xor <2 x i32> %3, <i32 -1, i32 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %4
;
; CV2-LABEL: 'nandd_v2i32_rr'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = and <2 x i32> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = xor <2 x i32> %3, <i32 -1, i32 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %4
;
  %3 = and <2 x i32> %1, %0
  %4 = xor <2 x i32> %3, <i32 -1, i32 -1>
  ret <2 x i32> %4
}

define <2 x i32> @nandd_v2i32_ri10(<2 x i32> %0) {
; CV1-LABEL: 'nandd_v2i32_ri10'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <2 x i32> %0, <i32 1023, i32 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
; CV2-LABEL: 'nandd_v2i32_ri10'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <2 x i32> %0, <i32 1023, i32 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
  %2 = and <2 x i32> %0, <i32 1023, i32 0>
  %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
  ret <2 x i32> %3
}

define <2 x i32> @nandd_v2i32_ri37(<2 x i32> %0) {
; CV1-LABEL: 'nandd_v2i32_ri37'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <2 x i32> %0, <i32 1024, i32 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
; CV2-LABEL: 'nandd_v2i32_ri37'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <2 x i32> %0, <i32 1024, i32 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
  %2 = and <2 x i32> %0, <i32 1024, i32 0>
  %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
  ret <2 x i32> %3
}

define <2 x i32> @nandd_v2i32_ri37_2(<2 x i32> %0) {
; CV1-LABEL: 'nandd_v2i32_ri37_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <2 x i32> %0, <i32 13, i32 13>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
; CV2-LABEL: 'nandd_v2i32_ri37_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <2 x i32> %0, <i32 13, i32 13>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
  %2 = and <2 x i32> %0, <i32 13, i32 13>
  %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
  ret <2 x i32> %3
}

define <2 x i32> @nandd_v2i32_ri64(<2 x i32> %0) {
; CV1-LABEL: 'nandd_v2i32_ri64'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <2 x i32> %0, <i32 13, i32 896540>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
; CV2-LABEL: 'nandd_v2i32_ri64'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <2 x i32> %0, <i32 13, i32 896540>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %3
;
  %2 = and <2 x i32> %0, <i32 13, i32 896540>
  %3 = xor <2 x i32> %2, <i32 -1, i32 -1>
  ret <2 x i32> %3
}

define <2 x i8> @trunc_to_v2i8(<2 x i32> %a){
; CV1-LABEL: 'trunc_to_v2i8'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = trunc <2 x i32> %a to <2 x i8>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i8> %r
;
; CV2-LABEL: 'trunc_to_v2i8'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = trunc <2 x i32> %a to <2 x i8>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i8> %r
;
  %r = trunc <2 x i32> %a to <2 x i8>
  ret <2 x i8> %r
}

define <2 x i8> @trunc_to_v2i8_buildvector(i32 %arg1, i32 %arg2) {
; CV1-LABEL: 'trunc_to_v2i8_buildvector'
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %v0 = insertelement <2 x i32> undef, i32 %arg1, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v1 = insertelement <2 x i32> %v0, i32 %arg2, i32 1
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %conv = trunc <2 x i32> %v1 to <2 x i8>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i8> %conv
;
; CV2-LABEL: 'trunc_to_v2i8_buildvector'
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %v0 = insertelement <2 x i32> undef, i32 %arg1, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v1 = insertelement <2 x i32> %v0, i32 %arg2, i32 1
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %conv = trunc <2 x i32> %v1 to <2 x i8>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i8> %conv
;
  %v0 = insertelement <2 x i32> undef, i32 %arg1, i32 0
  %v1 = insertelement <2 x i32> %v0, i32 %arg2, i32 1
  %conv = trunc <2 x i32> %v1 to <2 x i8>
  ret <2 x i8> %conv
}

define <2 x i32> @MULHWQ(<2 x i16> %a, <2 x i16> %b) {
; CV1-LABEL: 'MULHWQ'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = sext <2 x i16> %a to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %1 = sext <2 x i16> %b to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul nsw <2 x i32> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %mul
;
; CV2-LABEL: 'MULHWQ'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = sext <2 x i16> %a to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %1 = sext <2 x i16> %b to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul nsw <2 x i32> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %mul
;
entry:
  %0 = sext <2 x i16> %a to <2 x i32>
  %1 = sext <2 x i16> %b to <2 x i32>
  %mul = mul nsw <2 x i32> %1, %0
  ret <2 x i32> %mul
}

define <2 x i32> @MULSUHWQ(<2 x i16> %a, <2 x i16> %b) {
; CV1-LABEL: 'MULSUHWQ'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = sext <2 x i16> %a to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %1 = zext <2 x i16> %b to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul nsw <2 x i32> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %mul
;
; CV2-LABEL: 'MULSUHWQ'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = sext <2 x i16> %a to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %1 = zext <2 x i16> %b to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul nsw <2 x i32> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %mul
;
entry:
  %0 = sext <2 x i16> %a to <2 x i32>
  %1 = zext <2 x i16> %b to <2 x i32>
  %mul = mul nsw <2 x i32> %1, %0
  ret <2 x i32> %mul
}

define <2 x i32> @MULUHWQ(<2 x i16> %a, <2 x i16> %b) {
; CV1-LABEL: 'MULUHWQ'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = zext <2 x i16> %a to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %1 = zext <2 x i16> %b to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul nuw <2 x i32> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %mul
;
; CV2-LABEL: 'MULUHWQ'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = zext <2 x i16> %a to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %1 = zext <2 x i16> %b to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul nuw <2 x i32> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %mul
;
entry:
  %0 = zext <2 x i16> %a to <2 x i32>
  %1 = zext <2 x i16> %b to <2 x i32>
  %mul = mul nuw <2 x i32> %1, %0
  ret <2 x i32> %mul
}

define <2 x i32> @MADDHWQ(<2 x i32> %0, <2 x i16> %1, <2 x i16> %2) {
; CV1-LABEL: 'MADDHWQ'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = sext <2 x i16> %1 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = sext <2 x i16> %2 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nsw <2 x i32> %5, %4
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = add <2 x i32> %6, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
; CV2-LABEL: 'MADDHWQ'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = sext <2 x i16> %1 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = sext <2 x i16> %2 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nsw <2 x i32> %5, %4
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = add <2 x i32> %6, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
  %4 = sext <2 x i16> %1 to <2 x i32>
  %5 = sext <2 x i16> %2 to <2 x i32>
  %6 = mul nsw <2 x i32> %5, %4
  %7 = add <2 x i32> %6, %0
  ret <2 x i32> %7
}

define <2 x i32> @MADDSUHWQ(<2 x i32> %0, <2 x i16> %1, <2 x i16> %2) {
; CV1-LABEL: 'MADDSUHWQ'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = sext <2 x i16> %1 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = zext <2 x i16> %2 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nsw <2 x i32> %5, %4
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = add <2 x i32> %6, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
; CV2-LABEL: 'MADDSUHWQ'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = sext <2 x i16> %1 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = zext <2 x i16> %2 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nsw <2 x i32> %5, %4
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = add <2 x i32> %6, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
  %4 = sext <2 x i16> %1 to <2 x i32>
  %5 = zext <2 x i16> %2 to <2 x i32>
  %6 = mul nsw <2 x i32> %5, %4
  %7 = add <2 x i32> %6, %0
  ret <2 x i32> %7
}

define <2 x i32> @MADDUHWQ(<2 x i32> %0, <2 x i16> %1, <2 x i16> %2) {
; CV1-LABEL: 'MADDUHWQ'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = zext <2 x i16> %1 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = zext <2 x i16> %2 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nuw <2 x i32> %5, %4
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = add <2 x i32> %6, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
; CV2-LABEL: 'MADDUHWQ'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = zext <2 x i16> %1 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = zext <2 x i16> %2 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nuw <2 x i32> %5, %4
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = add <2 x i32> %6, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
  %4 = zext <2 x i16> %1 to <2 x i32>
  %5 = zext <2 x i16> %2 to <2 x i32>
  %6 = mul nuw <2 x i32> %5, %4
  %7 = add <2 x i32> %6, %0
  ret <2 x i32> %7
}

define <2 x i32> @MSBFHWQ(<2 x i32> %0, <2 x i16> %1, <2 x i16> %2) {
; CV1-LABEL: 'MSBFHWQ'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = sext <2 x i16> %1 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = sext <2 x i16> %2 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nsw <2 x i32> %5, %4
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = sub <2 x i32> %0, %6
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
; CV2-LABEL: 'MSBFHWQ'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = sext <2 x i16> %1 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = sext <2 x i16> %2 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nsw <2 x i32> %5, %4
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = sub <2 x i32> %0, %6
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
  %4 = sext <2 x i16> %1 to <2 x i32>
  %5 = sext <2 x i16> %2 to <2 x i32>
  %6 = mul nsw <2 x i32> %5, %4
  %7 = sub <2 x i32> %0, %6
  ret <2 x i32> %7
}

define <2 x i32> @MSBFSUHWQ(<2 x i32> %0, <2 x i16> %1, <2 x i16> %2) {
; CV1-LABEL: 'MSBFSUHWQ'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = sext <2 x i16> %1 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = zext <2 x i16> %2 to <2 x i32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nsw <2 x i32> %5, %4
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = sub <2 x i32> %0, %6
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
; CV2-LABEL: 'MSBFSUHWQ'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = sext <2 x i16> %1 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = zext <2 x i16> %2 to <2 x i32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %6 = mul nsw <2 x i32> %5, %4
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %7 = sub <2 x i32> %0, %6
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %7
;
  %4 = sext <2 x i16> %1 to <2 x i32>
  %5 = zext <2 x i16> %2 to <2 x i32>
  %6 = mul nsw <2 x i32> %5, %4
  %7 = sub <2 x i32> %0, %6
  ret <2 x i32> %7
}

define i1 @vnez (<2 x i32> %0) {
; CV1-LABEL: 'vnez'
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %2 = extractelement <2 x i32> %0, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = extractelement <2 x i32> %0, i32 1
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = or i32 %2, %3
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = icmp ne i32 %4, 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i1 %5
;
; CV2-LABEL: 'vnez'
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %2 = extractelement <2 x i32> %0, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = extractelement <2 x i32> %0, i32 1
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = or i32 %2, %3
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = icmp ne i32 %4, 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i1 %5
;
  %2 = extractelement <2 x i32> %0, i32 0
  %3 = extractelement <2 x i32> %0, i32 1
  %4 = or i32 %2, %3
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

attributes #0 = { nounwind }

define <2 x i32> @test_div_4(<2 x i32> %a, <2 x i32> %b) #0 {
; CV1-LABEL: 'test_div_4'
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %r = sdiv <2 x i32> %a, <i32 4, i32 4>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_div_4'
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %r = sdiv <2 x i32> %a, <i32 4, i32 4>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = sdiv <2 x i32> %a, <i32 4, i32 4>
  ret <2 x i32> %r
}

define <2 x i32> @test_div_32(<2 x i32> %a, <2 x i32> %b) #0 {
; CV1-LABEL: 'test_div_32'
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %r = sdiv <2 x i32> %a, <i32 32, i32 32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_div_32'
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %r = sdiv <2 x i32> %a, <i32 32, i32 32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %r = sdiv <2 x i32> %a, <i32 32, i32 32>
  ret <2 x i32> %r
}

define <2 x i32> @sxlhwp(<4 x i16> %0) {
; CV1-LABEL: 'sxlhwp'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = tail call <2 x i32> @llvm.kvx.sxlhwp(<4 x i16> %0)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'sxlhwp'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = tail call <2 x i32> @llvm.kvx.sxlhwp(<4 x i16> %0)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
  %2 = tail call <2 x i32> @llvm.kvx.sxlhwp(<4 x i16> %0)
  ret <2 x i32> %2
}

declare <2 x i32> @llvm.kvx.sxlhwp(<4 x i16>)

define <2 x i32> @sxmhwp(<4 x i16> %0) {
; CV1-LABEL: 'sxmhwp'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = tail call <2 x i32> @llvm.kvx.sxmhwp(<4 x i16> %0)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
; CV2-LABEL: 'sxmhwp'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = tail call <2 x i32> @llvm.kvx.sxmhwp(<4 x i16> %0)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %2
;
  %2 = tail call <2 x i32> @llvm.kvx.sxmhwp(<4 x i16> %0)
  ret <2 x i32> %2
}

declare <2 x i32> @llvm.kvx.sxmhwp(<4 x i16>)

define <2 x i32> @test_select_cmp(<2 x i32> %a, <2 x i32> %b, <2 x i32> %c, <2 x i32> %d) #0 {
; CV1-LABEL: 'test_select_cmp'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp ne <2 x i32> %c, %d
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %bc = bitcast <2 x i1> %cc to i2
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %cmp = icmp eq i2 %bc, -1
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select i1 %cmp, <2 x i32> %a, <2 x i32> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
; CV2-LABEL: 'test_select_cmp'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp ne <2 x i32> %c, %d
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %bc = bitcast <2 x i1> %cc to i2
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %cmp = icmp eq i2 %bc, -1
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select i1 %cmp, <2 x i32> %a, <2 x i32> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <2 x i32> %r
;
  %cc = icmp ne <2 x i32> %c, %d
  %bc = bitcast <2 x i1> %cc to i2
  %cmp = icmp eq i2 %bc, -1
  %r = select i1 %cmp, <2 x i32> %a, <2 x i32> %b
  ret <2 x i32> %r
}
