; NOTE: Assertions have been autogenerated by utils/update_analyze_test_checks.py
; RUN: opt -mcpu=kv3-1 -mtriple=kvx-kalray-cos -passes='print<cost-model>' -cost-kind=throughput -disable-output %s 2>&1 | FileCheck %s --check-prefix=CV1
; RUN: opt -mcpu=kv3-2 -mtriple=kvx-kalray-cos -passes='print<cost-model>' -cost-kind=throughput -disable-output %s 2>&1 | FileCheck %s --check-prefix=CV2

target triple = "kvx-kalray-cos"

define <4 x i16> @test_ret_const() {
; CV1-LABEL: 'test_ret_const'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> <i16 1, i16 2, i16 1, i16 2>
;
; CV2-LABEL: 'test_ret_const'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> <i16 1, i16 2, i16 1, i16 2>
;
  ret <4 x i16> <i16 1, i16 2, i16 1, i16 2>
}

define i16 @test_extract_0(<4 x i16> %a) {
; CV1-LABEL: 'test_extract_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i16 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
; CV2-LABEL: 'test_extract_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i16 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
  %e = extractelement <4 x i16> %a, i16 0
  ret i16 %e
}

define i16 @test_extract_1(<4 x i16> %a) {
; CV1-LABEL: 'test_extract_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i16 1
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
; CV2-LABEL: 'test_extract_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i16 1
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
  %e = extractelement <4 x i16> %a, i16 1
  ret i16 %e
}

define i16 @test_extract_2(<4 x i16> %a) {
; CV1-LABEL: 'test_extract_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i16 2
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
; CV2-LABEL: 'test_extract_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i16 2
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
  %e = extractelement <4 x i16> %a, i16 2
  ret i16 %e
}

define i16 @test_extract_3(<4 x i16> %a) {
; CV1-LABEL: 'test_extract_3'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i16 3
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
; CV2-LABEL: 'test_extract_3'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i16 3
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
  %e = extractelement <4 x i16> %a, i16 3
  ret i16 %e
}

define <4 x i16> @test_fma(<4 x i16> %a, <4 x i16> %b, <4 x i16> %c) {
; CV1-LABEL: 'test_fma'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <4 x i16> %b, %c
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <4 x i16> %a, %m
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %ad
;
; CV2-LABEL: 'test_fma'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <4 x i16> %b, %c
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <4 x i16> %a, %m
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %ad
;
  %m = mul <4 x i16> %b, %c
  %ad = add <4 x i16> %a, %m
  ret <4 x i16> %ad
}

define <4 x i16> @test_fma_imm(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_fma_imm'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <4 x i16> <i16 7, i16 2, i16 1, i16 3>, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <4 x i16> %a, %m
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %ad
;
; CV2-LABEL: 'test_fma_imm'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <4 x i16> <i16 7, i16 2, i16 1, i16 3>, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <4 x i16> %a, %m
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %ad
;
  %m = mul <4 x i16> <i16 7, i16 2, i16 1, i16 3>, %b
  %ad = add <4 x i16> %a, %m
  ret <4 x i16> %ad
}


define <4 x i16> @test_fma_imm_2(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_fma_imm_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <4 x i16> <i16 1, i16 2, i16 1, i16 2>, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <4 x i16> %a, %m
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %ad
;
; CV2-LABEL: 'test_fma_imm_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %m = mul <4 x i16> <i16 1, i16 2, i16 1, i16 2>, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ad = add <4 x i16> %a, %m
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %ad
;
  %m = mul <4 x i16> <i16 1, i16 2, i16 1, i16 2>, %b
  %ad = add <4 x i16> %a, %m
  ret <4 x i16> %ad
}

define i16 @test_extract_i(<4 x i16> %a, i64 %idx) #0 {
; CV1-LABEL: 'test_extract_i'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i64 %idx
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
; CV2-LABEL: 'test_extract_i'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <4 x i16> %a, i64 %idx
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i16 %e
;
  %e = extractelement <4 x i16> %a, i64 %idx
  ret i16 %e
}

define <4 x i16> @test_add(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_add'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_add'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = add <4 x i16> %a, %b
  ret <4 x i16> %r
}

define <4 x i16> @test_add_imm_0(<4 x i16> %a) {
; CV1-LABEL: 'test_add_imm_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <4 x i16> <i16 1, i16 2, i16 1, i16 2>, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_add_imm_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <4 x i16> <i16 1, i16 2, i16 1, i16 2>, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = add <4 x i16> <i16 1, i16 2, i16 1, i16 2>, %a
  ret <4 x i16> %r
}

define <4 x i16> @test_add_imm_1(<4 x i16> %a) {
; CV1-LABEL: 'test_add_imm_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <4 x i16> %a, <i16 1, i16 2, i16 1, i16 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_add_imm_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <4 x i16> %a, <i16 1, i16 2, i16 1, i16 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = add <4 x i16> %a, <i16 1, i16 2, i16 1, i16 2>
  ret <4 x i16> %r
}

define <4 x i16> @test_sub(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_sub'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_sub'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = sub <4 x i16> %a, %b
  ret <4 x i16> %r
}

define <4 x i16> @test_sub_imm(<4 x i16> %a) {
; CV1-LABEL: 'test_sub_imm'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <4 x i16> %a, <i16 1, i16 2, i16 1, i16 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_sub_imm'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <4 x i16> %a, <i16 1, i16 2, i16 1, i16 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = sub <4 x i16> %a, <i16 1, i16 2, i16 1, i16 2>
  ret <4 x i16> %r
}

define <4 x i16> @test_sub_fromimm(<4 x i16> %a) {
; CV1-LABEL: 'test_sub_fromimm'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <4 x i16> <i16 1, i16 2, i16 1, i16 2>, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_sub_fromimm'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <4 x i16> <i16 1, i16 2, i16 1, i16 2>, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = sub <4 x i16> <i16 1, i16 2, i16 1, i16 2>, %a
  ret <4 x i16> %r
}

define <4 x i16> @test_neg(<4 x i16> %a) {
; CV1-LABEL: 'test_neg'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <4 x i16> zeroinitializer, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_neg'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = sub <4 x i16> zeroinitializer, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = sub <4 x i16> <i16 0, i16 0, i16 0, i16 0>, %a
  ret <4 x i16> %r
}

define <4 x i16> @test_mul(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_mul'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = mul <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_mul'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = mul <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = mul <4 x i16> %a, %b
  ret <4 x i16> %r
}

define <4 x i16> @test_mul_2(<4 x i16> %a, <4 x i16> %b, <4 x i16> %c) {
; CV1-LABEL: 'test_mul_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = mul <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r1 = mul <4 x i16> %r, %c
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r1
;
; CV2-LABEL: 'test_mul_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = mul <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r1 = mul <4 x i16> %r, %c
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r1
;
  %r = mul <4 x i16> %a, %b
  %r1 = mul <4 x i16> %r, %c
  ret <4 x i16> %r1
}

define <4 x i16> @test_div(<4 x i16> %a, <4 x i16> %b) #0 {
; CV1-LABEL: 'test_div'
; CV1-NEXT:  Cost Model: Found an estimated cost of 7 for instruction: %r = sdiv <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_div'
; CV2-NEXT:  Cost Model: Found an estimated cost of 7 for instruction: %r = sdiv <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = sdiv <4 x i16> %a, %b
  ret <4 x i16> %r
}

define <4 x i16> @test_rem(<4 x i16> %a, <4 x i16> %b) #0 {
; CV1-LABEL: 'test_rem'
; CV1-NEXT:  Cost Model: Found an estimated cost of 7 for instruction: %r = srem <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_rem'
; CV2-NEXT:  Cost Model: Found an estimated cost of 7 for instruction: %r = srem <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = srem <4 x i16> %a, %b
  ret <4 x i16> %r
}

define void @test_ldst_v4i16(<4 x i16>* %a, <4 x i16>* %b) {
; CV1-LABEL: 'test_ldst_v4i16'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %t1 = load <4 x i16>, <4 x i16>* %a, align 8
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <4 x i16> %t1, <4 x i16>* %b, align 16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
; CV2-LABEL: 'test_ldst_v4i16'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %t1 = load <4 x i16>, <4 x i16>* %a, align 8
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <4 x i16> %t1, <4 x i16>* %b, align 16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
  %t1 = load <4 x i16>, <4 x i16>* %a
  store <4 x i16> %t1, <4 x i16>* %b, align 16
  ret void
}

declare <4 x i16> @test_callee(<4 x i16> %a, <4 x i16> %b)

define <4 x i16> @test_call(<4 x i16> %a, <4 x i16> %b) #0 {
; CV1-LABEL: 'test_call'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <4 x i16> @test_callee(<4 x i16> %a, <4 x i16> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_call'
; CV2-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <4 x i16> @test_callee(<4 x i16> %a, <4 x i16> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = call <4 x i16> @test_callee(<4 x i16> %a, <4 x i16> %b)
  ret <4 x i16> %r
}

define <4 x i16> @test_call_flipped(<4 x i16> %a, <4 x i16> %b) #0 {
; CV1-LABEL: 'test_call_flipped'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <4 x i16> @test_callee(<4 x i16> %b, <4 x i16> %a)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_call_flipped'
; CV2-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <4 x i16> @test_callee(<4 x i16> %b, <4 x i16> %a)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = call <4 x i16> @test_callee(<4 x i16> %b, <4 x i16> %a)
  ret <4 x i16> %r
}

define <4 x i16> @test_tailcall_flipped(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_tailcall_flipped'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = tail call <4 x i16> @test_callee(<4 x i16> %b, <4 x i16> %a)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_tailcall_flipped'
; CV2-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = tail call <4 x i16> @test_callee(<4 x i16> %b, <4 x i16> %a)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = tail call <4 x i16> @test_callee(<4 x i16> %b, <4 x i16> %a)
  ret <4 x i16> %r
}

define <4 x i16> @test_select(<4 x i16> %a, <4 x i16> %b, i1 zeroext %c) {
; CV1-LABEL: 'test_select'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select i1 %c, <4 x i16> %a, <4 x i16> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_select'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select i1 %c, <4 x i16> %a, <4 x i16> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = select i1 %c, <4 x i16> %a, <4 x i16> %b
  ret <4 x i16> %r
}

define <4 x i16> @test_select_cc(<4 x i16> %a, <4 x i16> %b, <4 x i16> %c, <4 x i16> %d) {
; CV1-LABEL: 'test_select_cc'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp slt <4 x i16> %c, %d
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select <4 x i1> %cc, <4 x i16> %a, <4 x i16> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_select_cc'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp slt <4 x i16> %c, %d
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select <4 x i1> %cc, <4 x i16> %a, <4 x i16> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %cc = icmp slt <4 x i16> %c, %d
  %r = select <4 x i1> %cc, <4 x i16> %a, <4 x i16> %b
  ret <4 x i16> %r
}

define <4 x i64> @test_select_cc_f32_f32(<4 x i64> %a, <4 x i64> %b, <4 x i16> %c, <4 x i16> %d) {
; CV1-LABEL: 'test_select_cc_f32_f32'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp ult <4 x i16> %c, %d
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select <4 x i1> %cc, <4 x i64> %a, <4 x i64> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i64> %r
;
; CV2-LABEL: 'test_select_cc_f32_f32'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %cc = icmp ult <4 x i16> %c, %d
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = select <4 x i1> %cc, <4 x i64> %a, <4 x i64> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i64> %r
;
  %cc = icmp ult <4 x i16> %c, %d
  %r = select <4 x i1> %cc, <4 x i64> %a, <4 x i64> %b
  ret <4 x i64> %r
}

define <4 x i1> @test_icmp_ule(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_icmp_ule'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ule <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
; CV2-LABEL: 'test_icmp_ule'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ule <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
  %r = icmp ule <4 x i16> %a, %b
  ret <4 x i1> %r
}

define <4 x i1> @test_icmp_slt(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_icmp_slt'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp slt <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
; CV2-LABEL: 'test_icmp_slt'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp slt <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
  %r = icmp slt <4 x i16> %a, %b
  ret <4 x i1> %r
}

define <4 x i1> @test_icmp_ugt(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_icmp_ugt'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ugt <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
; CV2-LABEL: 'test_icmp_ugt'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ugt <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
  %r = icmp ugt <4 x i16> %a, %b
  ret <4 x i1> %r
}

define <4 x i1> @test_icmp_uge(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_icmp_uge'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp uge <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
; CV2-LABEL: 'test_icmp_uge'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp uge <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
  %r = icmp uge <4 x i16> %a, %b
  ret <4 x i1> %r
}

define <4 x i1> @test_icmp_ult(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'test_icmp_ult'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ult <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
; CV2-LABEL: 'test_icmp_ult'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %r = icmp ult <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i1> %r
;
  %r = icmp ult <4 x i16> %a, %b
  ret <4 x i1> %r
}

define <4 x i8> @trunc_to_v4i8(<4 x i16> %a) {
; CV1-LABEL: 'trunc_to_v4i8'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = trunc <4 x i16> %a to <4 x i8>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i8> %r
;
; CV2-LABEL: 'trunc_to_v4i8'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = trunc <4 x i16> %a to <4 x i8>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i8> %r
;
  %r = trunc <4 x i16> %a to <4 x i8>
  ret <4 x i8> %r
}

define <4 x i8> @trunc_to_v4i8_buildvector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) {
; CV1-LABEL: 'trunc_to_v4i8_buildvector'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %arg1b = trunc i32 %arg1 to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %arg2b = trunc i32 %arg2 to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %arg3b = trunc i32 %arg3 to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %arg4b = trunc i32 %arg4 to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v0 = insertelement <4 x i16> undef, i16 %arg1b, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v1 = insertelement <4 x i16> %v0, i16 %arg2b, i32 1
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v2 = insertelement <4 x i16> %v1, i16 %arg3b, i32 2
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v3 = insertelement <4 x i16> %v2, i16 %arg4b, i32 3
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %conv = trunc <4 x i16> %v3 to <4 x i8>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i8> %conv
;
; CV2-LABEL: 'trunc_to_v4i8_buildvector'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %arg1b = trunc i32 %arg1 to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %arg2b = trunc i32 %arg2 to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %arg3b = trunc i32 %arg3 to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %arg4b = trunc i32 %arg4 to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v0 = insertelement <4 x i16> undef, i16 %arg1b, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v1 = insertelement <4 x i16> %v0, i16 %arg2b, i32 1
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v2 = insertelement <4 x i16> %v1, i16 %arg3b, i32 2
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %v3 = insertelement <4 x i16> %v2, i16 %arg4b, i32 3
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %conv = trunc <4 x i16> %v3 to <4 x i8>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i8> %conv
;
  %arg1b = trunc i32 %arg1 to i16
  %arg2b = trunc i32 %arg2 to i16
  %arg3b = trunc i32 %arg3 to i16
  %arg4b = trunc i32 %arg4 to i16
  %v0 = insertelement <4 x i16> undef, i16 %arg1b, i32 0
  %v1 = insertelement <4 x i16> %v0, i16 %arg2b, i32 1
  %v2 = insertelement <4 x i16> %v1, i16 %arg3b, i32 2
  %v3 = insertelement <4 x i16> %v2, i16 %arg4b, i32 3
  %conv = trunc <4 x i16> %v3 to <4 x i8>
  ret <4 x i8> %conv
}

define <4 x i16> @concat(<2 x i16> %a, <2 x i16> %b){
; CV1-LABEL: 'concat'
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %v = shufflevector <2 x i16> %a, <2 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %v
;
; CV2-LABEL: 'concat'
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %v = shufflevector <2 x i16> %a, <2 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %v
;
  %v = shufflevector <2 x i16> %a, <2 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  ret <4 x i16> %v
}

define <4 x i64> @test_sext_2xi64(<4 x i16> %a) {
; CV1-LABEL: 'test_sext_2xi64'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sext <4 x i16> %a to <4 x i64>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i64> %r
;
; CV2-LABEL: 'test_sext_2xi64'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sext <4 x i16> %a to <4 x i64>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i64> %r
;
  %r = sext <4 x i16> %a to <4 x i64>
  ret <4 x i64> %r
}

declare <4 x i16> @llvm.abs.v4i16(<4 x i16>, i1) #0

define <4 x i16> @test_abs(<4 x i16> %a) {
; CV1-LABEL: 'test_abs'
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %r = call <4 x i16> @llvm.abs.v4i16(<4 x i16> %a, i1 false)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_abs'
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %r = call <4 x i16> @llvm.abs.v4i16(<4 x i16> %a, i1 false)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = call <4 x i16> @llvm.abs.v4i16(<4 x i16> %a, i1 false)
  ret <4 x i16> %r
}

define <4 x i16> @test_insertelement0(<4 x i16> %a, i16 %x) {
; CV1-LABEL: 'test_insertelement0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
; CV2-LABEL: 'test_insertelement0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
  %i = insertelement <4 x i16> %a, i16 %x, i64 0
  ret <4 x i16> %i
}

define <4 x i16> @test_insertelement1(<4 x i16> %a, i16 %x) {
; CV1-LABEL: 'test_insertelement1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 1
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
; CV2-LABEL: 'test_insertelement1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 1
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
  %i = insertelement <4 x i16> %a, i16 %x, i64 1
  ret <4 x i16> %i
}

define <4 x i16> @test_insertelement2(<4 x i16> %a, i16 %x) {
; CV1-LABEL: 'test_insertelement2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 2
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
; CV2-LABEL: 'test_insertelement2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 2
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
  %i = insertelement <4 x i16> %a, i16 %x, i64 2
  ret <4 x i16> %i
}

define <4 x i16> @test_insertelement3(<4 x i16> %a, i16 %x) {
; CV1-LABEL: 'test_insertelement3'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 3
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
; CV2-LABEL: 'test_insertelement3'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 3
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
  %i = insertelement <4 x i16> %a, i16 %x, i64 3
  ret <4 x i16> %i
}

define <4 x i16> @test_insertelement(<4 x i16> %a, i16 %x, i64 %p) {
; CV1-LABEL: 'test_insertelement'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 %p
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
; CV2-LABEL: 'test_insertelement'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <4 x i16> %a, i16 %x, i64 %p
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %i
;
  %i = insertelement <4 x i16> %a, i16 %x, i64 %p
  ret <4 x i16> %i
}

define <4 x i16> @mulsub(<4 x i16> %a, <4 x i16> %b, <4 x i16> %c) {
; CV1-LABEL: 'mulsub'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul <4 x i16> %b, %c
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %sub = sub <4 x i16> %a, %mul
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %sub
;
; CV2-LABEL: 'mulsub'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %mul = mul <4 x i16> %b, %c
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %sub = sub <4 x i16> %a, %mul
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %sub
;
  %mul = mul <4 x i16> %b, %c
  %sub = sub <4 x i16> %a, %mul
  ret <4 x i16> %sub
}

define <4 x i16> @vnot(<4 x i16> %a) {
; CV1-LABEL: 'vnot'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %vnot = xor <4 x i16> %a, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %vnot
;
; CV2-LABEL: 'vnot'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %vnot = xor <4 x i16> %a, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %vnot
;
  %vnot = xor <4 x i16> %a, <i16 -1, i16 -1, i16 -1, i16 -1>
  ret <4 x i16> %vnot
}

define <4 x i16> @lnand(<4 x i16> %0, <4 x i16> %1) {
; CV1-LABEL: 'lnand'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %3 = icmp eq <4 x i16> %0, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <4 x i16> %1, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = or <4 x i1> %4, %3
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %6 = zext <4 x i1> %5 to <4 x i16>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %6
;
; CV2-LABEL: 'lnand'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %3 = icmp eq <4 x i16> %0, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <4 x i16> %1, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = or <4 x i1> %4, %3
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %6 = zext <4 x i1> %5 to <4 x i16>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %6
;
  %3 = icmp eq <4 x i16> %0, zeroinitializer
  %4 = icmp eq <4 x i16> %1, zeroinitializer
  %5 = or <4 x i1> %4, %3
  %6 = zext <4 x i1> %5 to <4 x i16>
  ret <4 x i16> %6
}

define <4 x i16> @lnandn(<4 x i16> %0, <4 x i16> %1) {
; CV1-LABEL: 'lnandn'
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %3 = icmp eq <4 x i16> %0, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <4 x i16> %1, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = or <4 x i1> %4, %3
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %6 = sext <4 x i1> %5 to <4 x i16>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %6
;
; CV2-LABEL: 'lnandn'
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %3 = icmp eq <4 x i16> %0, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <4 x i16> %1, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %5 = or <4 x i1> %4, %3
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %6 = sext <4 x i1> %5 to <4 x i16>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %6
;
  %3 = icmp eq <4 x i16> %0, zeroinitializer
  %4 = icmp eq <4 x i16> %1, zeroinitializer
  %5 = or <4 x i1> %4, %3
  %6 = sext <4 x i1> %5 to <4 x i16>
  ret <4 x i16> %6
}

define <4 x i16> @lor(<4 x i16> %0, <4 x i16> %1) {
; CV1-LABEL: 'lor'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <4 x i16> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp ne <4 x i16> %3, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %5 = zext <4 x i1> %4 to <4 x i16>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
; CV2-LABEL: 'lor'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <4 x i16> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp ne <4 x i16> %3, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %5 = zext <4 x i1> %4 to <4 x i16>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
  %3 = or <4 x i16> %1, %0
  %4 = icmp ne <4 x i16> %3, zeroinitializer
  %5 = zext <4 x i1> %4 to <4 x i16>
  ret <4 x i16> %5
}

define <4 x i16> @lorneg(<4 x i16> %0, <4 x i16> %1) {
; CV1-LABEL: 'lorneg'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <4 x i16> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp ne <4 x i16> %3, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %5 = sext <4 x i1> %4 to <4 x i16>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
; CV2-LABEL: 'lorneg'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <4 x i16> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp ne <4 x i16> %3, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %5 = sext <4 x i1> %4 to <4 x i16>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
  %3 = or <4 x i16> %1, %0
  %4 = icmp ne <4 x i16> %3, zeroinitializer
  %5 = sext <4 x i1> %4 to <4 x i16>
  ret <4 x i16> %5
}

define <4 x i16> @lnor(<4 x i16> %0, <4 x i16> %1) {
; CV1-LABEL: 'lnor'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <4 x i16> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <4 x i16> %3, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %5 = zext <4 x i1> %4 to <4 x i16>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
; CV2-LABEL: 'lnor'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <4 x i16> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <4 x i16> %3, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %5 = zext <4 x i1> %4 to <4 x i16>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
  %3 = or <4 x i16> %1, %0
  %4 = icmp eq <4 x i16> %3, zeroinitializer
  %5 = zext <4 x i1> %4 to <4 x i16>
  ret <4 x i16> %5
}

define <4 x i16> @lnorneg(<4 x i16> %0, <4 x i16> %1) {
; CV1-LABEL: 'lnorneg'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <4 x i16> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <4 x i16> %3, zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %5 = sext <4 x i1> %4 to <4 x i16>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
; CV2-LABEL: 'lnorneg'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = or <4 x i16> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 70000 for instruction: %4 = icmp eq <4 x i16> %3, zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %5 = sext <4 x i1> %4 to <4 x i16>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
  %3 = or <4 x i16> %1, %0
  %4 = icmp eq <4 x i16> %3, zeroinitializer
  %5 = sext <4 x i1> %4 to <4 x i16>
  ret <4 x i16> %5
}


define <4 x i16> @abdhq_rr(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'abdhq_rr'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %sub = sub nsw <4 x i16> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %0 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %sub, i1 true)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
; CV2-LABEL: 'abdhq_rr'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %sub = sub nsw <4 x i16> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %0 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %sub, i1 true)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
entry:
  %sub = sub nsw <4 x i16> %a, %b
  %0 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %sub, i1 true)
  ret <4 x i16> %0
}

define <4 x i16> @abdhq_not_ri(<4 x i16> %0) {
; CV1-LABEL: 'abdhq_not_ri'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <4 x i16> <i16 18, i16 16, i16 15, i16 16>, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %2, i1 true)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'abdhq_not_ri'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <4 x i16> <i16 18, i16 16, i16 15, i16 16>, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %2, i1 true)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = sub nsw <4 x i16> <i16 18, i16 16, i16 15, i16 16>, %0
  %3 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %2, i1 true)
  ret <4 x i16> %3
}

define <4 x i16> @abdhq_ri_(<4 x i16> %0) {
; CV1-LABEL: 'abdhq_ri_'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <4 x i16> <i16 15, i16 16, i16 0, i16 0>, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %2, i1 true)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'abdhq_ri_'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <4 x i16> <i16 15, i16 16, i16 0, i16 0>, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %2, i1 true)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = sub nsw <4 x i16> <i16 15, i16 16, i16 0, i16 0>, %0
  %3 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %2, i1 true)
  ret <4 x i16> %3
}

define <4 x i16> @abdhq_ri_at(<4 x i16> %0) {
; CV1-LABEL: 'abdhq_ri_at'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <4 x i16> <i16 15, i16 16, i16 15, i16 16>, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %2, i1 true)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'abdhq_ri_at'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub nsw <4 x i16> <i16 15, i16 16, i16 15, i16 16>, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 140001 for instruction: %3 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %2, i1 true)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = sub nsw <4 x i16> <i16 15, i16 16, i16 15, i16 16>, %0
  %3 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %2, i1 true)
  ret <4 x i16> %3
}

define <4 x i16> @nandd_v4i16_rr(<4 x i16> %0, <4 x i16> %1) {
; CV1-LABEL: 'nandd_v4i16_rr'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = and <4 x i16> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = xor <4 x i16> %3, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %4
;
; CV2-LABEL: 'nandd_v4i16_rr'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = and <4 x i16> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = xor <4 x i16> %3, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %4
;
  %3 = and <4 x i16> %1, %0
  %4 = xor <4 x i16> %3, <i16 -1, i16 -1, i16 -1, i16 -1>
  ret <4 x i16> %4
}

define <4 x i16> @nandd_v4i16_ri10(<4 x i16> %0) {
; CV1-LABEL: 'nandd_v4i16_ri10'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1023, i16 0, i16 0, i16 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'nandd_v4i16_ri10'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1023, i16 0, i16 0, i16 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = and <4 x i16> %0, <i16 1023, i16 0, i16 0, i16 0>
  %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
  ret <4 x i16> %3
}

define <4 x i16> @nandd_v4i16_ri37_0(<4 x i16> %0) {
; CV1-LABEL: 'nandd_v4i16_ri37_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 0, i16 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'nandd_v4i16_ri37_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 0, i16 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 0, i16 0>
  %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
  ret <4 x i16> %3
}

define <4 x i16> @nandd_v4i16_ri37_1(<4 x i16> %0) {
; CV1-LABEL: 'nandd_v4i16_ri37_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 0, i16 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'nandd_v4i16_ri37_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 0, i16 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 0, i16 0>
  %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
  ret <4 x i16> %3
}

define <4 x i16> @nandd_v4i16_ri37_2(<4 x i16> %0) {
; CV1-LABEL: 'nandd_v4i16_ri37_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 31, i16 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'nandd_v4i16_ri37_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 31, i16 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 31, i16 0>
  %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
  ret <4 x i16> %3
}

define <4 x i16> @nandd_v4i16_ri64_0(<4 x i16> %0) {
; CV1-LABEL: 'nandd_v4i16_ri64_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 32, i16 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'nandd_v4i16_ri64_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 32, i16 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 32, i16 0>
  %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
  ret <4 x i16> %3
}

define <4 x i16> @nandd_v4i16_ri64_1(<4 x i16> %0) {
; CV1-LABEL: 'nandd_v4i16_ri64_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 -1, i16 0>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'nandd_v4i16_ri64_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 -1, i16 0>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 -1, i16 0>
  %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
  ret <4 x i16> %3
}

define <4 x i16> @nandd_v4i16_ri64_2(<4 x i16> %0) {
; CV1-LABEL: 'nandd_v4i16_ri64_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 31, i16 1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
; CV2-LABEL: 'nandd_v4i16_ri64_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 31, i16 1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %3
;
  %2 = and <4 x i16> %0, <i16 1024, i16 -3, i16 31, i16 1>
  %3 = xor <4 x i16> %2, <i16 -1, i16 -1, i16 -1, i16 -1>
  ret <4 x i16> %3
}

define <4 x i16> @splat(i32 %0) {
; CV1-LABEL: 'splat'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = trunc i32 %0 to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = insertelement <4 x i16> undef, i16 %2, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %4 = shufflevector <4 x i16> %3, <4 x i16> undef, <4 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %4
;
; CV2-LABEL: 'splat'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = trunc i32 %0 to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = insertelement <4 x i16> undef, i16 %2, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %4 = shufflevector <4 x i16> %3, <4 x i16> undef, <4 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %4
;
  %2 = trunc i32 %0 to i16
  %3 = insertelement <4 x i16> undef, i16 %2, i32 0
  %4 = shufflevector <4 x i16> %3, <4 x i16> undef, <4 x i32> zeroinitializer
  ret <4 x i16> %4
}

define <4 x i16> @splat_0(<4 x i16> %0) {
; CV1-LABEL: 'splat_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %2
;
; CV2-LABEL: 'splat_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %2
;
  %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> zeroinitializer
  ret <4 x i16> %2
}

define <4 x i16> @splat_1(<4 x i16> %0) {
; CV1-LABEL: 'splat_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 8 for instruction: %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %2
;
; CV2-LABEL: 'splat_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 8 for instruction: %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %2
;
  %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  ret <4 x i16> %2
}

define <4 x i16> @splat_1_32(i32 %0) {
; CV1-LABEL: 'splat_1_32'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = lshr i32 %0, 16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = trunc i32 %2 to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = insertelement <4 x i16> undef, i16 %3, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
; CV2-LABEL: 'splat_1_32'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = lshr i32 %0, 16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = trunc i32 %2 to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = insertelement <4 x i16> undef, i16 %3, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
  %2 = lshr i32 %0, 16
  %3 = trunc i32 %2 to i16
  %4 = insertelement <4 x i16> undef, i16 %3, i32 0
  %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
  ret <4 x i16> %5
}

define <4 x i16> @splat_1_64(i64 %0) {
; CV1-LABEL: 'splat_1_64'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = lshr i64 %0, 16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = trunc i64 %2 to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = insertelement <4 x i16> undef, i16 %3, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
; CV2-LABEL: 'splat_1_64'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = lshr i64 %0, 16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = trunc i64 %2 to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = insertelement <4 x i16> undef, i16 %3, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
  %2 = lshr i64 %0, 16
  %3 = trunc i64 %2 to i16
  %4 = insertelement <4 x i16> undef, i16 %3, i32 0
  %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
  ret <4 x i16> %5
}

define <4 x i16> @splat_2(<4 x i16> %0) {
; CV1-LABEL: 'splat_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 8 for instruction: %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %2
;
; CV2-LABEL: 'splat_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 8 for instruction: %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %2
;
  %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  ret <4 x i16> %2
}

define <4 x i16> @splat_2_64(i64 %0) {
; CV1-LABEL: 'splat_2_64'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = lshr i64 %0, 32
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = trunc i64 %2 to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = insertelement <4 x i16> undef, i16 %3, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
; CV2-LABEL: 'splat_2_64'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = lshr i64 %0, 32
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = trunc i64 %2 to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = insertelement <4 x i16> undef, i16 %3, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
  %2 = lshr i64 %0, 32
  %3 = trunc i64 %2 to i16
  %4 = insertelement <4 x i16> undef, i16 %3, i32 0
  %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
  ret <4 x i16> %5
}

define <4 x i16> @splat_3(<4 x i16> %0) {
; CV1-LABEL: 'splat_3'
; CV1-NEXT:  Cost Model: Found an estimated cost of 8 for instruction: %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %2
;
; CV2-LABEL: 'splat_3'
; CV2-NEXT:  Cost Model: Found an estimated cost of 8 for instruction: %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %2
;
  %2 = shufflevector <4 x i16> %0, <4 x i16> undef, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  ret <4 x i16> %2
}

define <4 x i16> @splat_3_64(i64 %0) {
; CV1-LABEL: 'splat_3_64'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = lshr i64 %0, 48
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = trunc i64 %2 to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = insertelement <4 x i16> undef, i16 %3, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
; CV2-LABEL: 'splat_3_64'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = lshr i64 %0, 48
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %3 = trunc i64 %2 to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %4 = insertelement <4 x i16> undef, i16 %3, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %5
;
  %2 = lshr i64 %0, 48
  %3 = trunc i64 %2 to i16
  %4 = insertelement <4 x i16> undef, i16 %3, i32 0
  %5 = shufflevector <4 x i16> %4, <4 x i16> undef, <4 x i32> zeroinitializer
  ret <4 x i16> %5
}

define  <4 x i16> @v4_maxhq_rr_i16(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'v4_maxhq_rr_i16'
; CV1-NEXT:  Cost Model: Found an estimated cost of 140000 for instruction: %0 = call <4 x i16> @llvm.smax.v4i16(<4 x i16> %a, <4 x i16> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
; CV2-LABEL: 'v4_maxhq_rr_i16'
; CV2-NEXT:  Cost Model: Found an estimated cost of 140000 for instruction: %0 = call <4 x i16> @llvm.smax.v4i16(<4 x i16> %a, <4 x i16> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
entry:
  %0 = call <4 x i16> @llvm.smax.v4i16(<4 x i16> %a, <4 x i16> %b)
  ret <4 x i16> %0
}

define  <4 x i16> @v4_minhq_rr_i16(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'v4_minhq_rr_i16'
; CV1-NEXT:  Cost Model: Found an estimated cost of 140000 for instruction: %0 = call <4 x i16> @llvm.smin.v4i16(<4 x i16> %a, <4 x i16> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
; CV2-LABEL: 'v4_minhq_rr_i16'
; CV2-NEXT:  Cost Model: Found an estimated cost of 140000 for instruction: %0 = call <4 x i16> @llvm.smin.v4i16(<4 x i16> %a, <4 x i16> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
entry:
  %0 = call <4 x i16> @llvm.smin.v4i16(<4 x i16> %a, <4 x i16> %b)
  ret <4 x i16> %0
}

define  <4 x i16> @v4_umaxhq_rr_i16(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'v4_umaxhq_rr_i16'
; CV1-NEXT:  Cost Model: Found an estimated cost of 140000 for instruction: %0 = call <4 x i16> @llvm.umax.v4i16(<4 x i16> %a, <4 x i16> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
; CV2-LABEL: 'v4_umaxhq_rr_i16'
; CV2-NEXT:  Cost Model: Found an estimated cost of 140000 for instruction: %0 = call <4 x i16> @llvm.umax.v4i16(<4 x i16> %a, <4 x i16> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
entry:
  %0 = call <4 x i16> @llvm.umax.v4i16(<4 x i16> %a, <4 x i16> %b)
  ret <4 x i16> %0
}

define  <4 x i16> @v4_uminhq_rr_i16(<4 x i16> %a, <4 x i16> %b) {
; CV1-LABEL: 'v4_uminhq_rr_i16'
; CV1-NEXT:  Cost Model: Found an estimated cost of 140000 for instruction: %0 = call <4 x i16> @llvm.umin.v4i16(<4 x i16> %a, <4 x i16> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
; CV2-LABEL: 'v4_uminhq_rr_i16'
; CV2-NEXT:  Cost Model: Found an estimated cost of 140000 for instruction: %0 = call <4 x i16> @llvm.umin.v4i16(<4 x i16> %a, <4 x i16> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %0
;
entry:
  %0 = call <4 x i16> @llvm.umin.v4i16(<4 x i16> %a, <4 x i16> %b)
  ret <4 x i16> %0
}

declare <4 x i16> @llvm.smax.v4i16(<4 x i16> %a, <4 x i16> %b)
declare <4 x i16> @llvm.smin.v4i16(<4 x i16> %a, <4 x i16> %b)
declare <4 x i16> @llvm.umax.v4i16(<4 x i16> %a, <4 x i16> %b)
declare <4 x i16> @llvm.umin.v4i16(<4 x i16> %a, <4 x i16> %b)

define <4 x i16> @add_splat_const_op1(<4 x i16> %vx) #0 {
; CV1-LABEL: 'add_splat_const_op1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %splatx = shufflevector <4 x i16> %vx, <4 x i16> undef, <4 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <4 x i16> %splatx, <i16 42, i16 42, i16 42, i16 42>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'add_splat_const_op1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %splatx = shufflevector <4 x i16> %vx, <4 x i16> undef, <4 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = add <4 x i16> %splatx, <i16 42, i16 42, i16 42, i16 42>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %splatx = shufflevector <4 x i16> %vx, <4 x i16> undef, <4 x i32> zeroinitializer
  %r = add <4 x i16> %splatx, <i16 42, i16 42, i16 42, i16 42>
  ret <4 x i16> %r
}
attributes #0 = { nounwind }

define <4 x i16> @test_div_4(<4 x i16> %a, <4 x i16> %b) #0 {
; CV1-LABEL: 'test_div_4'
; CV1-NEXT:  Cost Model: Found an estimated cost of 6 for instruction: %r = sdiv <4 x i16> %a, <i16 4, i16 4, i16 4, i16 4>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_div_4'
; CV2-NEXT:  Cost Model: Found an estimated cost of 6 for instruction: %r = sdiv <4 x i16> %a, <i16 4, i16 4, i16 4, i16 4>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = sdiv <4 x i16> %a, <i16 4, i16 4, i16 4, i16 4>
  ret <4 x i16> %r
}

define <4 x i16> @test_div_32(<4 x i16> %a, <4 x i16> %b) #0 {
; CV1-LABEL: 'test_div_32'
; CV1-NEXT:  Cost Model: Found an estimated cost of 6 for instruction: %r = sdiv <4 x i16> %a, <i16 32, i16 32, i16 32, i16 32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
; CV2-LABEL: 'test_div_32'
; CV2-NEXT:  Cost Model: Found an estimated cost of 6 for instruction: %r = sdiv <4 x i16> %a, <i16 32, i16 32, i16 32, i16 32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <4 x i16> %r
;
  %r = sdiv <4 x i16> %a, <i16 32, i16 32, i16 32, i16 32>
  ret <4 x i16> %r
}
