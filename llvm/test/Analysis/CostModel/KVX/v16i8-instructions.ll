; NOTE: Assertions have been autogenerated by utils/update_analyze_test_checks.py
; RUN: opt -mcpu=kv3-1 -mtriple=kvx-kalray-cos -passes='print<cost-model>' -cost-kind=throughput -disable-output %s 2>&1 | FileCheck %s --check-prefix=CV1
; RUN: opt -mcpu=kv3-2 -mtriple=kvx-kalray-cos -passes='print<cost-model>' -cost-kind=throughput -disable-output %s 2>&1 | FileCheck %s --check-prefix=CV2

target triple = "kvx-kalray-cos"

define <16 x i8> @test_ret_const() #0 {
; CV1-LABEL: 'test_ret_const'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>
;
; CV2-LABEL: 'test_ret_const'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>
;
  ret <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>
}

define i8 @test_extract_0(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_extract_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %e = extractelement <16 x i8> %a, i8 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
; CV2-LABEL: 'test_extract_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %e = extractelement <16 x i8> %a, i8 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
  %e = extractelement <16 x i8> %a, i8 0
  ret i8 %e
}

define i8 @test_extract_1(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_extract_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <16 x i8> %a, i8 1
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
; CV2-LABEL: 'test_extract_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <16 x i8> %a, i8 1
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
  %e = extractelement <16 x i8> %a, i8 1
  ret i8 %e
}

define i8 @test_extract_2(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_extract_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <16 x i8> %a, i8 2
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
; CV2-LABEL: 'test_extract_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <16 x i8> %a, i8 2
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
  %e = extractelement <16 x i8> %a, i8 2
  ret i8 %e
}

define i8 @test_extract_3(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_extract_3'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <16 x i8> %a, i8 3
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
; CV2-LABEL: 'test_extract_3'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <16 x i8> %a, i8 3
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
  %e = extractelement <16 x i8> %a, i8 3
  ret i8 %e
}

define <16 x i8> @test_fma(<16 x i8> %a, <16 x i8> %b, <16 x i8> %c) #0 {
; CV1-LABEL: 'test_fma'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %m = mul <16 x i8> %b, %c
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %ad = add <16 x i8> %a, %m
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %ad
;
; CV2-LABEL: 'test_fma'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %m = mul <16 x i8> %b, %c
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %ad = add <16 x i8> %a, %m
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %ad
;
  %m = mul <16 x i8> %b, %c
  %ad = add <16 x i8> %a, %m
  ret <16 x i8> %ad
}

define <16 x i8> @test_fma_imm_2(<16 x i8> %a, <16 x i8> %b) #0 {
; CV1-LABEL: 'test_fma_imm_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %m = mul <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %ad = add <16 x i8> %a, %m
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %ad
;
; CV2-LABEL: 'test_fma_imm_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %m = mul <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %ad = add <16 x i8> %a, %m
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %ad
;
  %m = mul <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>, %b
  %ad = add <16 x i8> %a, %m
  ret <16 x i8> %ad
}

define i8 @test_extract_i(<16 x i8> %a, i64 %idx) #0 {
; CV1-LABEL: 'test_extract_i'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <16 x i8> %a, i64 %idx
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
; CV2-LABEL: 'test_extract_i'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %e = extractelement <16 x i8> %a, i64 %idx
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret i8 %e
;
  %e = extractelement <16 x i8> %a, i64 %idx
  ret i8 %e
}

define <16 x i8> @test_add(<16 x i8> %a, <16 x i8> %b) #0 {
; CV1-LABEL: 'test_add'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = add <16 x i8> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_add'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = add <16 x i8> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = add <16 x i8> %a, %b
  ret <16 x i8> %r
}

define <16 x i8> @test_add_imm_0(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_add_imm_0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = add <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_add_imm_0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = add <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = add <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>, %a
  ret <16 x i8> %r
}

define <16 x i8> @test_add_imm_not_at(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_add_imm_not_at'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = add <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 0, i8 0, i8 0, i8 0, i8 1, i8 2, i8 1, i8 2, i8 0, i8 0, i8 0, i8 0>, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_add_imm_not_at'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = add <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 0, i8 0, i8 0, i8 0, i8 1, i8 2, i8 1, i8 2, i8 0, i8 0, i8 0, i8 0>, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = add <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 0, i8 0, i8 0, i8 0, i8 1, i8 2, i8 1, i8 2, i8 0, i8 0, i8 0, i8 0>, %a
  ret <16 x i8> %r
}

define <16 x i8> @test_add_imm_1(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_add_imm_1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = add <16 x i8> %a, <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_add_imm_1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = add <16 x i8> %a, <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = add <16 x i8> %a, <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>
  ret <16 x i8> %r
}

define <16 x i8> @test_sub(<16 x i8> %a, <16 x i8> %b) #0 {
; CV1-LABEL: 'test_sub'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sub <16 x i8> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_sub'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sub <16 x i8> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = sub <16 x i8> %a, %b
  ret <16 x i8> %r
}

define <16 x i8> @test_sub_imm(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_sub_imm'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sub <16 x i8> %a, <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_sub_imm'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sub <16 x i8> %a, <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = sub <16 x i8> %a, <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>
  ret <16 x i8> %r
}

define <16 x i8> @test_sub_fromimm(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_sub_fromimm'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sub <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_sub_fromimm'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sub <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = sub <16 x i8> <i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2, i8 1, i8 2>, %a
  ret <16 x i8> %r
}

define <16 x i8> @test_neg(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_neg'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sub <16 x i8> zeroinitializer, %a
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_neg'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sub <16 x i8> zeroinitializer, %a
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = sub <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, %a
  ret <16 x i8> %r
}

define <16 x i8> @test_mul(<16 x i8> %a, <16 x i8> %b) #0 {
; CV1-LABEL: 'test_mul'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = mul <16 x i8> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_mul'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = mul <16 x i8> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = mul <16 x i8> %a, %b
  ret <16 x i8> %r
}

define <16 x i8> @test_mul_2(<16 x i8> %a, <16 x i8> %b, <16 x i8> %c) #0 {
; CV1-LABEL: 'test_mul_2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = mul <16 x i8> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r1 = mul <16 x i8> %r, %c
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r1
;
; CV2-LABEL: 'test_mul_2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = mul <16 x i8> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r1 = mul <16 x i8> %r, %c
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r1
;
  %r = mul <16 x i8> %a, %b
  %r1 = mul <16 x i8> %r, %c
  ret <16 x i8> %r1
}

define <16 x i8> @test_div(<16 x i8> %a, <16 x i8> %b) #0 {
; CV1-LABEL: 'test_div'
; CV1-NEXT:  Cost Model: Found an estimated cost of 200 for instruction: %r = sdiv <16 x i8> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_div'
; CV2-NEXT:  Cost Model: Found an estimated cost of 200 for instruction: %r = sdiv <16 x i8> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = sdiv <16 x i8> %a, %b
  ret <16 x i8> %r
}

define <16 x i8> @test_rem(<16 x i8> %a, <16 x i8> %b) #0 {
; CV1-LABEL: 'test_rem'
; CV1-NEXT:  Cost Model: Found an estimated cost of 200 for instruction: %r = srem <16 x i8> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_rem'
; CV2-NEXT:  Cost Model: Found an estimated cost of 200 for instruction: %r = srem <16 x i8> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = srem <16 x i8> %a, %b
  ret <16 x i8> %r
}

define void @test_ldst_v8i8(<16 x i8>* %a, <16 x i8>* %b) {
; CV1-LABEL: 'test_ldst_v8i8'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %t1 = load <16 x i8>, <16 x i8>* %a, align 16
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: store <16 x i8> %t1, <16 x i8>* %b, align 16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
; CV2-LABEL: 'test_ldst_v8i8'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %t1 = load <16 x i8>, <16 x i8>* %a, align 16
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: store <16 x i8> %t1, <16 x i8>* %b, align 16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
  %t1 = load <16 x i8>, <16 x i8>* %a
  store <16 x i8> %t1, <16 x i8>* %b, align 16
  ret void
}

declare <16 x i8> @test_callee(<16 x i8> %a, <16 x i8> %b) #0

define <16 x i8> @test_call(<16 x i8> %a, <16 x i8> %b) #0 {
; CV1-LABEL: 'test_call'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <16 x i8> @test_callee(<16 x i8> %a, <16 x i8> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_call'
; CV2-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <16 x i8> @test_callee(<16 x i8> %a, <16 x i8> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = call <16 x i8> @test_callee(<16 x i8> %a, <16 x i8> %b)
  ret <16 x i8> %r
}

define <16 x i8> @test_call_flipped(<16 x i8> %a, <16 x i8> %b) #0 {
; CV1-LABEL: 'test_call_flipped'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <16 x i8> @test_callee(<16 x i8> %b, <16 x i8> %a)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_call_flipped'
; CV2-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = call <16 x i8> @test_callee(<16 x i8> %b, <16 x i8> %a)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = call <16 x i8> @test_callee(<16 x i8> %b, <16 x i8> %a)
  ret <16 x i8> %r
}

define <16 x i8> @test_tailcall_flipped(<16 x i8> %a, <16 x i8> %b) #0 {
; CV1-LABEL: 'test_tailcall_flipped'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = tail call <16 x i8> @test_callee(<16 x i8> %b, <16 x i8> %a)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_tailcall_flipped'
; CV2-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %r = tail call <16 x i8> @test_callee(<16 x i8> %b, <16 x i8> %a)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = tail call <16 x i8> @test_callee(<16 x i8> %b, <16 x i8> %a)
  ret <16 x i8> %r
}

define <16 x i8> @test_select(<16 x i8> %a, <16 x i8> %b, i1 zeroext %c) #0 {
; CV1-LABEL: 'test_select'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = select i1 %c, <16 x i8> %a, <16 x i8> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_select'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = select i1 %c, <16 x i8> %a, <16 x i8> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = select i1 %c, <16 x i8> %a, <16 x i8> %b
  ret <16 x i8> %r
}

define <16 x i8> @test_select_cc(<16 x i8> %a, <16 x i8> %b, <16 x i8> %c, <16 x i8> %d) #0 {
; CV1-LABEL: 'test_select_cc'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %cc = icmp slt <16 x i8> %c, %d
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = select <16 x i1> %cc, <16 x i8> %a, <16 x i8> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_select_cc'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %cc = icmp slt <16 x i8> %c, %d
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = select <16 x i1> %cc, <16 x i8> %a, <16 x i8> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %cc = icmp slt <16 x i8> %c, %d
  %r = select <16 x i1> %cc, <16 x i8> %a, <16 x i8> %b
  ret <16 x i8> %r
}

declare <16 x i8> @llvm.abs.v8i8(<16 x i8>, i1) #0

define <16 x i8> @test_abs(<16 x i8> %a) #0 {
; CV1-LABEL: 'test_abs'
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %r = call <16 x i8> @llvm.abs.v16i8(<16 x i8> %a, i1 false)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_abs'
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %r = call <16 x i8> @llvm.abs.v16i8(<16 x i8> %a, i1 false)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = call <16 x i8> @llvm.abs.v8i8(<16 x i8> %a, i1 false)
  ret <16 x i8> %r
}

define <16 x i8> @test_insertelement0(<16 x i8> %a, i8 %x) #0 {
; CV1-LABEL: 'test_insertelement0'
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
; CV2-LABEL: 'test_insertelement0'
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
  %i = insertelement <16 x i8> %a, i8 %x, i64 0
  ret <16 x i8> %i
}

define <16 x i8> @test_insertelement1(<16 x i8> %a, i8 %x) #0 {
; CV1-LABEL: 'test_insertelement1'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 1
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
; CV2-LABEL: 'test_insertelement1'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 1
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
  %i = insertelement <16 x i8> %a, i8 %x, i64 1
  ret <16 x i8> %i
}

define <16 x i8> @test_insertelement2(<16 x i8> %a, i8 %x) #0 {
; CV1-LABEL: 'test_insertelement2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 2
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
; CV2-LABEL: 'test_insertelement2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 2
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
  %i = insertelement <16 x i8> %a, i8 %x, i64 2
  ret <16 x i8> %i
}

define <16 x i8> @test_insertelement3(<16 x i8> %a, i8 %x) #0 {
; CV1-LABEL: 'test_insertelement3'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 3
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
; CV2-LABEL: 'test_insertelement3'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 3
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
  %i = insertelement <16 x i8> %a, i8 %x, i64 3
  ret <16 x i8> %i
}

define <16 x i8> @test_insertelement(<16 x i8> %a, i8 %x, i64 %p) #0 {
; CV1-LABEL: 'test_insertelement'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 %p
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
; CV2-LABEL: 'test_insertelement'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %i = insertelement <16 x i8> %a, i8 %x, i64 %p
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %i
;
  %i = insertelement <16 x i8> %a, i8 %x, i64 %p
  ret <16 x i8> %i
}

define <16 x i8> @mulsub(<16 x i8> %a, <16 x i8> %b, <16 x i8> %c) #0 {
; CV1-LABEL: 'mulsub'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %mul = mul <16 x i8> %b, %c
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %sub = sub <16 x i8> %a, %mul
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %sub
;
; CV2-LABEL: 'mulsub'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %mul = mul <16 x i8> %b, %c
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %sub = sub <16 x i8> %a, %mul
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %sub
;
  %mul = mul <16 x i8> %b, %c
  %sub = sub <16 x i8> %a, %mul
  ret <16 x i8> %sub
}

define <16 x i8> @vnot(<16 x i8> %a) #0 {
; CV1-LABEL: 'vnot'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %vnot = xor <16 x i8> %a, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %vnot
;
; CV2-LABEL: 'vnot'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %vnot = xor <16 x i8> %a, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %vnot
;
  %vnot = xor <16 x i8> %a, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  ret <16 x i8> %vnot
}

define <16 x i8> @nandd_rr(<16 x i8> %0, <16 x i8> %1) {
; CV1-LABEL: 'nandd_rr'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %3 = and <16 x i8> %1, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %4 = xor <16 x i8> %3, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %4
;
; CV2-LABEL: 'nandd_rr'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %3 = and <16 x i8> %1, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %4 = xor <16 x i8> %3, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %4
;
  %3 = and <16 x i8> %1, %0
  %4 = xor <16 x i8> %3, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  ret <16 x i8> %4
}

define <16 x i8> @concat(<8 x i8> %a) #0 {
; CV1-LABEL: 'concat'
; CV1-NEXT:  Cost Model: Found an estimated cost of -1 for instruction: %r = shufflevector <8 x i8> %a, <8 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'concat'
; CV2-NEXT:  Cost Model: Found an estimated cost of -1 for instruction: %r = shufflevector <8 x i8> %a, <8 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = shufflevector <8 x i8> %a, <8 x i8> undef,
  <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3>
  ret <16 x i8> %r
}

define <16 x i8> @concat2(<8 x i8> %a, <8 x i8> %b){
; CV1-LABEL: 'concat2'
; CV1-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %v = shufflevector <8 x i8> %a, <8 x i8> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %v
;
; CV2-LABEL: 'concat2'
; CV2-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %v = shufflevector <8 x i8> %a, <8 x i8> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %v
;
  %v = shufflevector <8 x i8> %a, <8 x i8> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  ret <16 x i8> %v
}

define <16 x i8> @splat_v8i8(i32 %s) {
; CV1-LABEL: 'splat_v8i8'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %conv = trunc i32 %s to i8
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %vecinit = insertelement <16 x i8> undef, i8 %conv, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %vecinit14 = shufflevector <16 x i8> %vecinit, <16 x i8> undef, <16 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %vecinit14
;
; CV2-LABEL: 'splat_v8i8'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %conv = trunc i32 %s to i8
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %vecinit = insertelement <16 x i8> undef, i8 %conv, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %vecinit14 = shufflevector <16 x i8> %vecinit, <16 x i8> undef, <16 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %vecinit14
;
entry:
  %conv = trunc i32 %s to i8
  %vecinit = insertelement <16 x i8> undef, i8 %conv, i32 0
  %vecinit14 = shufflevector <16 x i8> %vecinit, <16 x i8> undef, <16 x i32> zeroinitializer
  ret <16 x i8> %vecinit14
}

define <16 x i8> @splat_v8i8_ri() {
; CV1-LABEL: 'splat_v8i8_ri'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> <i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2>
;
; CV2-LABEL: 'splat_v8i8_ri'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> <i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2>
;
entry:
  ret <16 x i8> <i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2>
}

define <16 x i8> @shl(<16 x i8> %v, i32 %s) {
; CV1-LABEL: 'shl'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = trunc i32 %s to i8
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %1 = insertelement <16 x i8> undef, i8 %0, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %shl = shl <16 x i8> %v, %sh_prom
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %shl
;
; CV2-LABEL: 'shl'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = trunc i32 %s to i8
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %1 = insertelement <16 x i8> undef, i8 %0, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %shl = shl <16 x i8> %v, %sh_prom
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %shl
;
entry:
  %0 = trunc i32 %s to i8
  %1 = insertelement <16 x i8> undef, i8 %0, i32 0
  %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
  %shl = shl <16 x i8> %v, %sh_prom
  ret <16 x i8> %shl
}

define <16 x i8> @lsr(<16 x i8> %v, i32 %s) {
; CV1-LABEL: 'lsr'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = trunc i32 %s to i8
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %1 = insertelement <16 x i8> undef, i8 %0, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %shr = lshr <16 x i8> %v, %sh_prom
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %shr
;
; CV2-LABEL: 'lsr'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = trunc i32 %s to i8
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %1 = insertelement <16 x i8> undef, i8 %0, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %shr = lshr <16 x i8> %v, %sh_prom
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %shr
;
entry:
  %0 = trunc i32 %s to i8
  %1 = insertelement <16 x i8> undef, i8 %0, i32 0
  %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
  %shr = lshr <16 x i8> %v, %sh_prom
  ret <16 x i8> %shr
}

define <16 x i8> @rotl(<16 x i8> %v, i32 %s) {
; CV1-LABEL: 'rotl'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = trunc i32 %s to i8
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %1 = insertelement <16 x i8> undef, i8 %0, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %shl = shl <16 x i8> %v, %sh_prom
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub i8 8, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %3 = insertelement <16 x i8> undef, i8 %2, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom3 = shufflevector <16 x i8> %3, <16 x i8> undef, <16 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %shr = lshr <16 x i8> %v, %sh_prom3
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %or = or <16 x i8> %shr, %shl
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %or
;
; CV2-LABEL: 'rotl'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = trunc i32 %s to i8
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %1 = insertelement <16 x i8> undef, i8 %0, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %shl = shl <16 x i8> %v, %sh_prom
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub i8 8, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %3 = insertelement <16 x i8> undef, i8 %2, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom3 = shufflevector <16 x i8> %3, <16 x i8> undef, <16 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %shr = lshr <16 x i8> %v, %sh_prom3
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %or = or <16 x i8> %shr, %shl
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %or
;
entry:
  %0 = trunc i32 %s to i8
  %1 = insertelement <16 x i8> undef, i8 %0, i32 0
  %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
  %shl = shl <16 x i8> %v, %sh_prom
  %2 = sub i8 8, %0
  %3 = insertelement <16 x i8> undef, i8 %2, i32 0
  %sh_prom3 = shufflevector <16 x i8> %3, <16 x i8> undef, <16 x i32> zeroinitializer
  %shr = lshr <16 x i8> %v, %sh_prom3
  %or = or <16 x i8> %shr, %shl
  ret <16 x i8> %or
}

define <16 x i8> @rotr(<16 x i8> %v, i32 %s) {
; CV1-LABEL: 'rotr'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = trunc i32 %s to i8
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %1 = insertelement <16 x i8> undef, i8 %0, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %shr = lshr <16 x i8> %v, %sh_prom
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub i8 8, %0
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %3 = insertelement <16 x i8> undef, i8 %2, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom3 = shufflevector <16 x i8> %3, <16 x i8> undef, <16 x i32> zeroinitializer
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %shl = shl <16 x i8> %v, %sh_prom3
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %or = or <16 x i8> %shl, %shr
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %or
;
; CV2-LABEL: 'rotr'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = trunc i32 %s to i8
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %1 = insertelement <16 x i8> undef, i8 %0, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %shr = lshr <16 x i8> %v, %sh_prom
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %2 = sub i8 8, %0
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %3 = insertelement <16 x i8> undef, i8 %2, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %sh_prom3 = shufflevector <16 x i8> %3, <16 x i8> undef, <16 x i32> zeroinitializer
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %shl = shl <16 x i8> %v, %sh_prom3
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %or = or <16 x i8> %shl, %shr
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %or
;
entry:
  %0 = trunc i32 %s to i8
  %1 = insertelement <16 x i8> undef, i8 %0, i32 0
  %sh_prom = shufflevector <16 x i8> %1, <16 x i8> undef, <16 x i32> zeroinitializer
  %shr = lshr <16 x i8> %v, %sh_prom
  %2 = sub i8 8, %0
  %3 = insertelement <16 x i8> undef, i8 %2, i32 0
  %sh_prom3 = shufflevector <16 x i8> %3, <16 x i8> undef, <16 x i32> zeroinitializer
  %shl = shl <16 x i8> %v, %sh_prom3
  %or = or <16 x i8> %shl, %shr
  ret <16 x i8> %or
}

define <16 x i8> @abdbo_rr(<16 x i8> %a, <16 x i8> %b) {
; CV1-LABEL: 'abdbo_rr'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %sub = sub nsw <16 x i8> %a, %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 5 for instruction: %0 = tail call <16 x i8> @llvm.abs.v16i8(<16 x i8> %sub, i1 true)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
; CV2-LABEL: 'abdbo_rr'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %sub = sub nsw <16 x i8> %a, %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %0 = tail call <16 x i8> @llvm.abs.v16i8(<16 x i8> %sub, i1 true)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
entry:
  %sub = sub nsw <16 x i8> %a, %b
  %0 = tail call <16 x i8> @llvm.abs.v8i8(<16 x i8> %sub, i1 true)
  ret <16 x i8> %0
}

define  <16 x i8> @v4_maxbo_rr_i8(<16 x i8> %a, <16 x i8> %b) {
; CV1-LABEL: 'v4_maxbo_rr_i8'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %0 = call <16 x i8> @llvm.smax.v16i8(<16 x i8> %a, <16 x i8> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
; CV2-LABEL: 'v4_maxbo_rr_i8'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %0 = call <16 x i8> @llvm.smax.v16i8(<16 x i8> %a, <16 x i8> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
entry:
  %0 = call <16 x i8> @llvm.smax.v8i8(<16 x i8> %a, <16 x i8> %b)
  ret <16 x i8> %0
}

define  <16 x i8> @v4_minbo_rr_i8(<16 x i8> %a, <16 x i8> %b) {
; CV1-LABEL: 'v4_minbo_rr_i8'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %0 = call <16 x i8> @llvm.smin.v16i8(<16 x i8> %a, <16 x i8> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
; CV2-LABEL: 'v4_minbo_rr_i8'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %0 = call <16 x i8> @llvm.smin.v16i8(<16 x i8> %a, <16 x i8> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
entry:
  %0 = call <16 x i8> @llvm.smin.v8i8(<16 x i8> %a, <16 x i8> %b)
  ret <16 x i8> %0
}

define  <16 x i8> @v4_umaxbo_rr_i8(<16 x i8> %a, <16 x i8> %b) {
; CV1-LABEL: 'v4_umaxbo_rr_i8'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %0 = call <16 x i8> @llvm.umax.v16i8(<16 x i8> %a, <16 x i8> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
; CV2-LABEL: 'v4_umaxbo_rr_i8'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %0 = call <16 x i8> @llvm.umax.v16i8(<16 x i8> %a, <16 x i8> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
entry:
  %0 = call <16 x i8> @llvm.umax.v8i8(<16 x i8> %a, <16 x i8> %b)
  ret <16 x i8> %0
}

define  <16 x i8> @v4_uminbo_rr_i8(<16 x i8> %a, <16 x i8> %b) {
; CV1-LABEL: 'v4_uminbo_rr_i8'
; CV1-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %0 = call <16 x i8> @llvm.umin.v16i8(<16 x i8> %a, <16 x i8> %b)
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
; CV2-LABEL: 'v4_uminbo_rr_i8'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %0 = call <16 x i8> @llvm.umin.v16i8(<16 x i8> %a, <16 x i8> %b)
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %0
;
entry:
  %0 = call <16 x i8> @llvm.umin.v8i8(<16 x i8> %a, <16 x i8> %b)
  ret <16 x i8> %0
}

declare <16 x i8> @llvm.smax.v8i8(<16 x i8> %a, <16 x i8> %b)
declare <16 x i8> @llvm.smin.v8i8(<16 x i8> %a, <16 x i8> %b)
declare <16 x i8> @llvm.umax.v8i8(<16 x i8> %a, <16 x i8> %b)
declare <16 x i8> @llvm.umin.v8i8(<16 x i8> %a, <16 x i8> %b)

attributes #0 = { nounwind }

define <16 x i8> @test_div_4(<16 x i8> %a) {
; CV1-LABEL: 'test_div_4'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sdiv <16 x i8> %a, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_div_4'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sdiv <16 x i8> %a, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = sdiv <16 x i8> %a, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
  ret <16 x i8> %r
}

define <16 x i8> @test_div_32(<16 x i8> %a) {
; CV1-LABEL: 'test_div_32'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sdiv <16 x i8> %a, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_div_32'
; CV2-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %r = sdiv <16 x i8> %a, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = sdiv <16 x i8> %a, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
  ret <16 x i8> %r
}

define <16 x i8> @lshr_cst_splat_w_undefs(<16 x i8> %lhs ) {
; CV1-LABEL: 'lshr_cst_splat_w_undefs'
; CV1-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %r = lshr <16 x i8> %lhs, <i8 2, i8 undef, i8 undef, i8 undef, i8 2, i8 undef, i8 undef, i8 undef, i8 2, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'lshr_cst_splat_w_undefs'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = lshr <16 x i8> %lhs, <i8 2, i8 undef, i8 undef, i8 undef, i8 2, i8 undef, i8 undef, i8 undef, i8 2, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %r = lshr <16 x i8> %lhs, <i8 2, i8 undef, i8 undef, i8 undef, i8 2, i8 undef, i8 undef, i8 undef, i8 2, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>
  ret <16 x i8> %r
}

define <16 x i8> @lshr_val_splat_w_undefs(<16 x i8> %lhs, i32 %s ) {
; CV1-LABEL: 'lshr_val_splat_w_undefs'
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %conv = trunc i32 %s to i8
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %vecinit = insertelement <16 x i8> undef, i8 %conv, i32 0
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %rhs = insertelement <16 x i8> %vecinit, i8 %conv, i32 4
; CV1-NEXT:  Cost Model: Found an estimated cost of 28 for instruction: %r = lshr <16 x i8> %lhs, %rhs
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'lshr_val_splat_w_undefs'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %conv = trunc i32 %s to i8
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %vecinit = insertelement <16 x i8> undef, i8 %conv, i32 0
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %rhs = insertelement <16 x i8> %vecinit, i8 %conv, i32 4
; CV2-NEXT:  Cost Model: Found an estimated cost of 14 for instruction: %r = lshr <16 x i8> %lhs, %rhs
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %conv = trunc i32 %s to i8
  %vecinit = insertelement <16 x i8> undef, i8 %conv, i32 0
  %rhs = insertelement <16 x i8> %vecinit, i8 %conv, i32 4

  %r = lshr <16 x i8> %lhs, %rhs
  ret <16 x i8> %r
}

define <16 x i8> @test_select_cmp(<16 x i8> %a, <16 x i8> %b, <16 x i8> %c, <16 x i8> %d) #0 {
; CV1-LABEL: 'test_select_cmp'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %cc = icmp ne <16 x i8> %c, %d
; CV1-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %bc = bitcast <16 x i1> %cc to i16
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %cmp = icmp eq i16 %bc, -1
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = select i1 %cmp, <16 x i8> %a, <16 x i8> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_select_cmp'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %cc = icmp ne <16 x i8> %c, %d
; CV2-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: %bc = bitcast <16 x i1> %cc to i16
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %cmp = icmp eq i16 %bc, -1
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = select i1 %cmp, <16 x i8> %a, <16 x i8> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %cc = icmp ne <16 x i8> %c, %d
  %bc = bitcast <16 x i1> %cc to i16
  %cmp = icmp eq i16 %bc, -1
  %r = select i1 %cmp, <16 x i8> %a, <16 x i8> %b
  ret <16 x i8> %r
}

define <16 x i8> @test_select_cmp_vec(<16 x i8> %a, <16 x i8> %b, <16 x i8> %c, <16 x i8> %d) #0 {
; CV1-LABEL: 'test_select_cmp_vec'
; CV1-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %cc = icmp ne <16 x i8> %c, %d
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = select <16 x i1> %cc, <16 x i8> %a, <16 x i8> %b
; CV1-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
; CV2-LABEL: 'test_select_cmp_vec'
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %cc = icmp ne <16 x i8> %c, %d
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %r = select <16 x i1> %cc, <16 x i8> %a, <16 x i8> %b
; CV2-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret <16 x i8> %r
;
  %cc = icmp ne <16 x i8> %c, %d
  %r = select <16 x i1> %cc, <16 x i8> %a, <16 x i8> %b
  ret <16 x i8> %r
}
