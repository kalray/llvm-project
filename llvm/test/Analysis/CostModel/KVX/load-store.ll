; NOTE: Assertions have been autogenerated by utils/update_analyze_test_checks.py
; RUN: opt -mcpu=kv3-1 -mtriple=kvx-kalray-cos -passes='print<cost-model>' -cost-kind=throughput -disable-output %s 2>&1 | FileCheck %s
; RUN: opt -mcpu=kv3-2 -mtriple=kvx-kalray-cos -passes='print<cost-model>' -cost-kind=throughput -disable-output %s 2>&1 | FileCheck %s

target triple = "kvx-kalray-cos"

define void @ldstchar2(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstchar2'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = load <2 x i8>, ptr %in, align 2
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <2 x i8> %0, ptr %out, align 2
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <2 x i8>, ptr %in
  store <2 x i8> %0, ptr %out
  ret void
}

define void @ldstchar4(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstchar4'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = load <4 x i8>, ptr %in, align 4
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <4 x i8> %0, ptr %out, align 4
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <4 x i8>, ptr %in
  store <4 x i8> %0, ptr %out
  ret void
}

define void @ldstchar8(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstchar8'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = load <8 x i8>, ptr %in, align 8
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <8 x i8> %0, ptr %out, align 8
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <8 x i8>, ptr %in
  store <8 x i8> %0, ptr %out
  ret void
}

define void @ldstchar16(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstchar16'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %0 = load <16 x i8>, ptr %in, align 16
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: store <16 x i8> %0, ptr %out, align 16
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <16 x i8>, ptr %in
  store <16 x i8> %0, ptr %out
  ret void
}

define void @ldstchar32(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstchar32'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %0 = load <32 x i8>, ptr %in, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: store <32 x i8> %0, ptr %out, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <32 x i8>, ptr %in
  store <32 x i8> %0, ptr %out
  ret void
}

define void @ldstshort2(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstshort2'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = load <2 x i16>, ptr %in, align 4
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <2 x i16> %0, ptr %out, align 4
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <2 x i16>, ptr %in
  store <2 x i16> %0, ptr %out
  ret void
}

define void @ldstshort4(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstshort4'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = load <4 x i16>, ptr %in, align 8
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <4 x i16> %0, ptr %out, align 8
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <4 x i16>, ptr %in
  store <4 x i16> %0, ptr %out
  ret void
}

define void @ldstshort8(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstshort8'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %0 = load <8 x i16>, ptr %in, align 16
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: store <8 x i16> %0, ptr %out, align 16
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <8 x i16>, ptr %in
  store <8 x i16> %0, ptr %out
  ret void
}

define void @ldstshort16(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstshort16'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %0 = load <16 x i16>, ptr %in, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: store <16 x i16> %0, ptr %out, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <16 x i16>, ptr %in
  store <16 x i16> %0, ptr %out
  ret void
}

define void @ldstint2(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstint2'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = load <2 x i32>, ptr %in, align 8
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <2 x i32> %0, ptr %out, align 8
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <2 x i32>, ptr %in
  store <2 x i32> %0, ptr %out
  ret void
}

define void @ldstint4(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstint4'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = load <4 x i32>, ptr %in, align 16
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <4 x i32> %0, ptr %out, align 16
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <4 x i32>, ptr %in
  store <4 x i32> %0, ptr %out
  ret void
}

define void @ldstint8(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstint8'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %0 = load <8 x i32>, ptr %in, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: store <8 x i32> %0, ptr %out, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <8 x i32>, ptr %in
  store <8 x i32> %0, ptr %out
  ret void
}

define void @ldstint16(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstint16'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %0 = load <16 x i32>, ptr %in, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: store <16 x i32> %0, ptr %out, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <16 x i32>, ptr %in
  store <16 x i32> %0, ptr %out
  ret void
}

define void @ldstlong2(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstlong2'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = load <2 x i64>, ptr %in, align 16
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <2 x i64> %0, ptr %out, align 16
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <2 x i64>, ptr %in
  store <2 x i64> %0, ptr %out
  ret void
}

define void @ldstlong4(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstlong4'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %0 = load <4 x i64>, ptr %in, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: store <4 x i64> %0, ptr %out, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <4 x i64>, ptr %in
  store <4 x i64> %0, ptr %out
  ret void
}

define void @ldstlong8(ptr nocapture noundef readonly %in, ptr nocapture noundef writeonly %out) {
; CHECK-LABEL: 'ldstlong8'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %0 = load <8 x i64>, ptr %in, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: store <8 x i64> %0, ptr %out, align 32
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: ret void
;
entry:
  %0 = load <8 x i64>, ptr %in
  store <8 x i64> %0, ptr %out
  ret void
}

