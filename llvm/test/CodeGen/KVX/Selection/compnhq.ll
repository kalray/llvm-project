; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -o - %s -O2 | FileCheck %s --check-prefixes=CHECK
; RUN: llc -mcpu=kv3-2 -o - %s -O2 | FileCheck %s --check-prefixes=CHECK
; RUN: clang -c -o /dev/null %s
; RUN: clang -O2 -march=kv3-2 -c -o /dev/null %s

target triple = "kvx-kalray-cos"

define <4 x i16> @eq(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: eq:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.eq $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp eq <4 x i16> %a, %b
  %sext = sext <4 x i1> %cmp to <4 x i16>
  ret <4 x i16> %sext
}

define <4 x i16> @neq(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: neq:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.ne $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp ne <4 x i16> %a, %b
  %sext = sext <4 x i1> %cmp to <4 x i16>
  ret <4 x i16> %sext
}

define <4 x i16> @gt(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: gt:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.gt $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp sgt <4 x i16> %a, %b
  %sext = sext <4 x i1> %cmp to <4 x i16>
  ret <4 x i16> %sext
}

define <4 x i16> @lt(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: lt:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.lt $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp slt <4 x i16> %a, %b
  %sext = sext <4 x i1> %cmp to <4 x i16>
  ret <4 x i16> %sext
}

define <4 x i16> @gte(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: gte:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.ge $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp sge <4 x i16> %a, %b
  %sext = sext <4 x i1> %cmp to <4 x i16>
  ret <4 x i16> %sext
}

define <4 x i16> @lte(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: lte:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.le $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp sle <4 x i16> %a, %b
  %sext = sext <4 x i1> %cmp to <4 x i16>
  ret <4 x i16> %sext
}

define <2 x i16> @v2_eq(<2 x i16> %a, <2 x i16> %b){
; CHECK-LABEL: v2_eq:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.eq $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp eq <2 x i16> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i16>
  ret <2 x i16> %sext
}

define <2 x i16> @v2_neq(<2 x i16> %a, <2 x i16> %b){
; CHECK-LABEL: v2_neq:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.ne $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp ne <2 x i16> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i16>
  ret <2 x i16> %sext
}

define <2 x i16> @v2_gt(<2 x i16> %a, <2 x i16> %b){
; CHECK-LABEL: v2_gt:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.gt $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp sgt <2 x i16> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i16>
  ret <2 x i16> %sext
}

define <2 x i16> @v2_lt(<2 x i16> %a, <2 x i16> %b){
; CHECK-LABEL: v2_lt:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.lt $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp slt <2 x i16> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i16>
  ret <2 x i16> %sext
}

define <2 x i16> @v2_gte(<2 x i16> %a, <2 x i16> %b){
; CHECK-LABEL: v2_gte:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.ge $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp sge <2 x i16> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i16>
  ret <2 x i16> %sext
}

define <2 x i16> @v2_lte(<2 x i16> %a, <2 x i16> %b){
; CHECK-LABEL: v2_lte:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnhq.le $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp sle <2 x i16> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i16>
  ret <2 x i16> %sext
}

