; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -o - %s -O2 | FileCheck %s --check-prefixes=CHECK
; RUN: llc -mcpu=kv3-2 -o - %s -O2 | FileCheck %s --check-prefixes=CHECK
; RUN: clang -O2 -c -o /dev/null %s
; RUN: clang -O2 -march=kv3-2 -c -o /dev/null %s

target triple = "kvx-kalray-cos"

define i32 @f1(i32 %a, i32 %b){
; CHECK-LABEL: f1:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    maxw $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp slt i32 %a, %b
  %b.a = select i1 %cmp, i32 %b, i32 %a
  ret i32 %b.a
}

define i32 @f2(i32 %a, i32 %b){
; CHECK-LABEL: f2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    maxw $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp slt i32 %a, %b
  %cond = select i1 %cmp, i32 %b, i32 %a
  ret i32 %cond
}

define i32 @f3(i32 %a, i32 %b){
; CHECK-LABEL: f3:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    maxuw $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp ult i32 %a, %b
  %b.a = select i1 %cmp, i32 %b, i32 %a
  ret i32 %b.a
}

define i32 @f4(i32 %a, i32 %b){
; CHECK-LABEL: f4:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    maxuw $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %cmp = icmp ult i32 %a, %b
  %cond = select i1 %cmp, i32 %b, i32 %a
  ret i32 %cond
}

define i32 @f5(i32 %a){
; CHECK-LABEL: f5:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    maxw $r0 = $r0, 10
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
entry:
  %0 = icmp sgt i32 %a, 10
  %cond = select i1 %0, i32 %a, i32 10
  ret i32 %cond
}

