; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mcpu=kv3-1 -o - %s -O2 | FileCheck %s --check-prefixes=CHECK
; RUN: llc -mcpu=kv3-2 -o - %s -O2 | FileCheck %s --check-prefixes=CHECK
; RUN: clang -march=kv3-1 -O2 -c -o /dev/null %s
; RUN: clang -march=kv3-2 -O2 -c -o /dev/null %s

target triple = "kvx-kalray-cos"

define i64 @f_madddrr(i64 %a, i64 %b, i64 %c){
; CHECK-LABEL: f_madddrr:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    maddd $r0 = $r2, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %mul = mul nsw i64 %c, %b
  %add = add nsw i64 %mul, %a
  ret i64 %add
}

define i64 @f_madddri_1(i64 %a, i64 %b){
; CHECK-LABEL: f_madddri_1:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    maddd $r0 = $r1, 11
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %mul = mul nsw i64 %b, 11
  %add = add nsw i64 %mul, %a
  ret i64 %add
}

define i64 @f_maddd(i64 %a, i64 %b){
; CHECK-LABEL: f_maddd:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addd $r2 = $r1, $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    maddd $r2 = $r1, $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r2
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %mul = mul nsw i64 %b, %a
  %add = add nsw i64 %b, %a
  %add1 = add nsw i64 %add, %mul
  ret i64 %add1
}
