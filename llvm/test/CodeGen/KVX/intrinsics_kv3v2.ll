; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O2 -mcpu=kv3-2 -o - %s | FileCheck %s

target triple = "kvx-kalray-cos"

define void @dflushsw(i64 %w, i64 %s) {
; CHECK-LABEL: dflushsw:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    dflushsw.l1 $r1, $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    dflushsw.l2 $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  tail call void @llvm.kvx.dflushsw(i64 %w, i64 %s, i32 0)
  tail call void @llvm.kvx.dflushsw(i64 %w, i64 %s, i32 1)
  ret void
}

declare void @llvm.kvx.dflushsw(i64, i64, i32)

define void @dinvalsw(i64 %w, i64 %s) {
; CHECK-LABEL: dinvalsw:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    dinvalsw.l1 $r1, $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    dinvalsw.l2 $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  tail call void @llvm.kvx.dinvalsw(i64 %w, i64 %s, i32 0)
  tail call void @llvm.kvx.dinvalsw(i64 %w, i64 %s, i32 1)
  ret void
}

declare void @llvm.kvx.dinvalsw(i64, i64, i32)

define void @dpurgesw(i64 %w, i64 %s) {
; CHECK-LABEL: dpurgesw:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    dpurgesw.l1 $r1, $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    dpurgesw.l2 $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  tail call void @llvm.kvx.dpurgesw(i64 %w, i64 %s, i32 0)
  tail call void @llvm.kvx.dpurgesw(i64 %w, i64 %s, i32 1)
  ret void
}

declare void @llvm.kvx.dpurgesw(i64, i64, i32)
