; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O0 < %s | FileCheck %s
target triple = "kvx-kalray-cos"

define void @zeroinit256() {
; CHECK-LABEL: zeroinit256:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addd $r12 = $r12, -32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_def_cfa_offset 32
; CHECK-NEXT:    # implicit-def: $a0
; CHECK-NEXT:  .LBB0_1: # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    lv $a0 = 0[$r12]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyv $a0 = $a48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sv 0[$r12] = $a0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    goto .LBB0_1
; CHECK-NEXT:    ;;
  br label %1

1:
  %2 = phi <256 x i1> [ %3, %1 ], [ undef, %0 ]
  %3 = select i1 undef, <256 x i1> %2, <256 x i1> zeroinitializer
  br label %1
}

define void @zeroinit512() {
; CHECK-LABEL: zeroinit512:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addd $r12 = $r12, -192
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_def_cfa_offset 192
; CHECK-NEXT:    get $r16 = $ra
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_register 67, 16
; CHECK-NEXT:    sd 184[$r12] = $r16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_offset 67, -8
; CHECK-NEXT:    sd 176[$r12] = $r14
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_offset 14, -16
; CHECK-NEXT:    addd $r14 = $r12, 176
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_def_cfa 14, 16
; CHECK-NEXT:    sd 168[$r12] = $r31
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_offset 31, -24
; CHECK-NEXT:    andd $r31 = $r12, -64
; CHECK-NEXT:    ;;
; CHECK-NEXT:    # implicit-def: $w0
; CHECK-NEXT:  .LBB1_1: # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    lv $a0 = 64[$r31]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    lv $a1 = 96[$r31]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyv $a0 = $a50
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyv $a1 = $a51
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sv 64[$r31] = $a0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sv 96[$r31] = $a1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    goto .LBB1_1
; CHECK-NEXT:    ;;
  br label %1

1:
  %2 = phi <512 x i1> [ %3, %1 ], [ undef, %0 ]
  %3 = select i1 undef, <512 x i1> %2, <512 x i1> zeroinitializer
  br label %1
}

define void @zeroinit1024() {
; CHECK-LABEL: zeroinit1024:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addd $r12 = $r12, -384
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_def_cfa_offset 384
; CHECK-NEXT:    get $r16 = $ra
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_register 67, 16
; CHECK-NEXT:    sd 376[$r12] = $r16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_offset 67, -8
; CHECK-NEXT:    sd 368[$r12] = $r14
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_offset 14, -16
; CHECK-NEXT:    addd $r14 = $r12, 368
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_def_cfa 14, 16
; CHECK-NEXT:    sd 360[$r12] = $r31
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_offset 31, -24
; CHECK-NEXT:    andd $r31 = $r12, -128
; CHECK-NEXT:    ;;
; CHECK-NEXT:    # implicit-def: $x0
; CHECK-NEXT:  .LBB2_1: # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    lv $a0 = 128[$r31]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    lv $a1 = 160[$r31]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    lv $a2 = 192[$r31]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    lv $a3 = 224[$r31]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyv $a0 = $a48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyv $a1 = $a49
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyv $a2 = $a50
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyv $a3 = $a51
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sv 128[$r31] = $a0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sv 160[$r31] = $a1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sv 192[$r31] = $a2
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sv 224[$r31] = $a3
; CHECK-NEXT:    ;;
; CHECK-NEXT:    goto .LBB2_1
; CHECK-NEXT:    ;;
  br label %1

1:
  %2 = phi <1024 x i1> [ %3, %1 ], [ undef, %0 ]
  %3 = select i1 undef, <1024 x i1> %2, <1024 x i1> zeroinitializer
  br label %1
}
