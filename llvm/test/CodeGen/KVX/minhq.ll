; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -O2 | FileCheck %s
target triple = "kvx-kalray-cos"

define <4 x i16> @f1(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: f1:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    extfs $r2 = $r0, 15, 0
; CHECK-NEXT:    extfs $r3 = $r1, 15, 0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minw $r2 = $r2, $r3
; CHECK-NEXT:    extfs $r3 = $r0, 31, 16
; CHECK-NEXT:    extfs $r4 = $r1, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minw $r3 = $r3, $r4
; CHECK-NEXT:    extfs $r4 = $r0, 47, 32
; CHECK-NEXT:    extfs $r5 = $r1, 47, 32
; CHECK-NEXT:    srad $r0 = $r0, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srad $r1 = $r1, 48
; CHECK-NEXT:    minw $r4 = $r4, $r5
; CHECK-NEXT:    insf $r2 = $r3, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minw $r0 = $r0, $r1
; CHECK-NEXT:    insf $r2 = $r4, 47, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r2 = $r0, 63, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r2
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x i16> %a, i32 0
  %vecext1 = extractelement <4 x i16> %b, i32 0
  %cmp3 = icmp sgt i16 %vecext, %vecext1
  %vecext1.vecext = select i1 %cmp3, i16 %vecext1, i16 %vecext
  %vecins = insertelement <4 x i16> undef, i16 %vecext1.vecext, i32 0
  %vecext.1 = extractelement <4 x i16> %a, i32 1
  %vecext1.1 = extractelement <4 x i16> %b, i32 1
  %cmp3.1 = icmp sgt i16 %vecext.1, %vecext1.1
  %vecext1.vecext.1 = select i1 %cmp3.1, i16 %vecext1.1, i16 %vecext.1
  %vecins.1 = insertelement <4 x i16> %vecins, i16 %vecext1.vecext.1, i32 1
  %vecext.2 = extractelement <4 x i16> %a, i32 2
  %vecext1.2 = extractelement <4 x i16> %b, i32 2
  %cmp3.2 = icmp sgt i16 %vecext.2, %vecext1.2
  %vecext1.vecext.2 = select i1 %cmp3.2, i16 %vecext1.2, i16 %vecext.2
  %vecins.2 = insertelement <4 x i16> %vecins.1, i16 %vecext1.vecext.2, i32 2
  %vecext.3 = extractelement <4 x i16> %a, i32 3
  %vecext1.3 = extractelement <4 x i16> %b, i32 3
  %cmp3.3 = icmp sgt i16 %vecext.3, %vecext1.3
  %vecext1.vecext.3 = select i1 %cmp3.3, i16 %vecext1.3, i16 %vecext.3
  %vecins.3 = insertelement <4 x i16> %vecins.2, i16 %vecext1.vecext.3, i32 3
  ret <4 x i16> %vecins.3
}

define <4 x i16> @f2(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: f2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    extfs $r2 = $r0, 15, 0
; CHECK-NEXT:    extfs $r3 = $r1, 15, 0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minw $r2 = $r2, $r3
; CHECK-NEXT:    extfs $r3 = $r0, 31, 16
; CHECK-NEXT:    extfs $r4 = $r1, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minw $r3 = $r3, $r4
; CHECK-NEXT:    extfs $r4 = $r0, 47, 32
; CHECK-NEXT:    extfs $r5 = $r1, 47, 32
; CHECK-NEXT:    srad $r0 = $r0, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srad $r1 = $r1, 48
; CHECK-NEXT:    minw $r4 = $r4, $r5
; CHECK-NEXT:    insf $r2 = $r3, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minw $r0 = $r0, $r1
; CHECK-NEXT:    insf $r2 = $r4, 47, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r2 = $r0, 63, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r2
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x i16> %a, i32 0
  %vecext1 = extractelement <4 x i16> %b, i32 0
  %cmp = icmp sgt i16 %vecext, %vecext1
  %vecext1.vecext = select i1 %cmp, i16 %vecext1, i16 %vecext
  %vecins = insertelement <4 x i16> undef, i16 %vecext1.vecext, i32 0
  %vecext9 = extractelement <4 x i16> %a, i32 1
  %vecext11 = extractelement <4 x i16> %b, i32 1
  %cmp13 = icmp sgt i16 %vecext9, %vecext11
  %cond22.in = select i1 %cmp13, i16 %vecext11, i16 %vecext9
  %vecins24 = insertelement <4 x i16> %vecins, i16 %cond22.in, i32 1
  %vecext25 = extractelement <4 x i16> %a, i32 2
  %vecext27 = extractelement <4 x i16> %b, i32 2
  %cmp29 = icmp sgt i16 %vecext25, %vecext27
  %vecext27.vecext25 = select i1 %cmp29, i16 %vecext27, i16 %vecext25
  %vecins40 = insertelement <4 x i16> %vecins24, i16 %vecext27.vecext25, i32 2
  %vecext41 = extractelement <4 x i16> %a, i32 3
  %vecext43 = extractelement <4 x i16> %b, i32 3
  %cmp45 = icmp sgt i16 %vecext41, %vecext43
  %cond54.in = select i1 %cmp45, i16 %vecext43, i16 %vecext41
  %vecins56 = insertelement <4 x i16> %vecins40, i16 %cond54.in, i32 3
  ret <4 x i16> %vecins56
}

define <4 x i16> @f3(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: f3:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    extfz $r2 = $r0, 15, 0
; CHECK-NEXT:    extfz $r3 = $r1, 15, 0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    zxhd $r2 = $r2
; CHECK-NEXT:    zxhd $r3 = $r3
; CHECK-NEXT:    ;;
; CHECK-NEXT:    extfz $r4 = $r1, 31, 16
; CHECK-NEXT:    minuw $r2 = $r2, $r3
; CHECK-NEXT:    extfz $r3 = $r0, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    zxhd $r3 = $r3
; CHECK-NEXT:    zxhd $r4 = $r4
; CHECK-NEXT:    ;;
; CHECK-NEXT:    extfz $r5 = $r1, 47, 32
; CHECK-NEXT:    minuw $r3 = $r3, $r4
; CHECK-NEXT:    extfz $r4 = $r0, 47, 32
; CHECK-NEXT:    srld $r0 = $r0, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srld $r1 = $r1, 48
; CHECK-NEXT:    zxhd $r4 = $r4
; CHECK-NEXT:    zxhd $r5 = $r5
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minuw $r4 = $r4, $r5
; CHECK-NEXT:    insf $r2 = $r3, 31, 16
; CHECK-NEXT:    zxhd $r0 = $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    zxhd $r1 = $r1
; CHECK-NEXT:    insf $r2 = $r4, 47, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minuw $r0 = $r0, $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r2 = $r0, 63, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r2
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x i16> %a, i32 0
  %vecext1 = extractelement <4 x i16> %b, i32 0
  %cmp3 = icmp ugt i16 %vecext, %vecext1
  %vecext1.vecext = select i1 %cmp3, i16 %vecext1, i16 %vecext
  %vecins = insertelement <4 x i16> undef, i16 %vecext1.vecext, i32 0
  %vecext.1 = extractelement <4 x i16> %a, i32 1
  %vecext1.1 = extractelement <4 x i16> %b, i32 1
  %cmp3.1 = icmp ugt i16 %vecext.1, %vecext1.1
  %vecext1.vecext.1 = select i1 %cmp3.1, i16 %vecext1.1, i16 %vecext.1
  %vecins.1 = insertelement <4 x i16> %vecins, i16 %vecext1.vecext.1, i32 1
  %vecext.2 = extractelement <4 x i16> %a, i32 2
  %vecext1.2 = extractelement <4 x i16> %b, i32 2
  %cmp3.2 = icmp ugt i16 %vecext.2, %vecext1.2
  %vecext1.vecext.2 = select i1 %cmp3.2, i16 %vecext1.2, i16 %vecext.2
  %vecins.2 = insertelement <4 x i16> %vecins.1, i16 %vecext1.vecext.2, i32 2
  %vecext.3 = extractelement <4 x i16> %a, i32 3
  %vecext1.3 = extractelement <4 x i16> %b, i32 3
  %cmp3.3 = icmp ugt i16 %vecext.3, %vecext1.3
  %vecext1.vecext.3 = select i1 %cmp3.3, i16 %vecext1.3, i16 %vecext.3
  %vecins.3 = insertelement <4 x i16> %vecins.2, i16 %vecext1.vecext.3, i32 3
  ret <4 x i16> %vecins.3
}

define <4 x i16> @f4(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: f4:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    extfz $r2 = $r0, 15, 0
; CHECK-NEXT:    extfz $r3 = $r1, 15, 0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    zxhd $r2 = $r2
; CHECK-NEXT:    zxhd $r3 = $r3
; CHECK-NEXT:    ;;
; CHECK-NEXT:    extfz $r4 = $r1, 31, 16
; CHECK-NEXT:    minuw $r2 = $r2, $r3
; CHECK-NEXT:    extfz $r3 = $r0, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    zxhd $r3 = $r3
; CHECK-NEXT:    zxhd $r4 = $r4
; CHECK-NEXT:    ;;
; CHECK-NEXT:    extfz $r5 = $r1, 47, 32
; CHECK-NEXT:    minuw $r3 = $r3, $r4
; CHECK-NEXT:    extfz $r4 = $r0, 47, 32
; CHECK-NEXT:    srld $r0 = $r0, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srld $r1 = $r1, 48
; CHECK-NEXT:    zxhd $r4 = $r4
; CHECK-NEXT:    zxhd $r5 = $r5
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minuw $r4 = $r4, $r5
; CHECK-NEXT:    insf $r2 = $r3, 31, 16
; CHECK-NEXT:    zxhd $r0 = $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    zxhd $r1 = $r1
; CHECK-NEXT:    insf $r2 = $r4, 47, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minuw $r0 = $r0, $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r2 = $r0, 63, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r2
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x i16> %a, i32 0
  %vecext1 = extractelement <4 x i16> %b, i32 0
  %cmp = icmp ugt i16 %vecext, %vecext1
  %vecext1.vecext = select i1 %cmp, i16 %vecext1, i16 %vecext
  %vecins = insertelement <4 x i16> undef, i16 %vecext1.vecext, i32 0
  %vecext9 = extractelement <4 x i16> %a, i32 1
  %vecext11 = extractelement <4 x i16> %b, i32 1
  %cmp13 = icmp ugt i16 %vecext9, %vecext11
  %cond22.in = select i1 %cmp13, i16 %vecext11, i16 %vecext9
  %vecins24 = insertelement <4 x i16> %vecins, i16 %cond22.in, i32 1
  %vecext25 = extractelement <4 x i16> %a, i32 2
  %vecext27 = extractelement <4 x i16> %b, i32 2
  %cmp29 = icmp ugt i16 %vecext25, %vecext27
  %vecext27.vecext25 = select i1 %cmp29, i16 %vecext27, i16 %vecext25
  %vecins40 = insertelement <4 x i16> %vecins24, i16 %vecext27.vecext25, i32 2
  %vecext41 = extractelement <4 x i16> %a, i32 3
  %vecext43 = extractelement <4 x i16> %b, i32 3
  %cmp45 = icmp ugt i16 %vecext41, %vecext43
  %cond54.in = select i1 %cmp45, i16 %vecext43, i16 %vecext41
  %vecins56 = insertelement <4 x i16> %vecins40, i16 %cond54.in, i32 3
  ret <4 x i16> %vecins56
}

define <4 x i16> @f5(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: f5:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    extfs $r1 = $r0, 15, 0
; CHECK-NEXT:    extfs $r2 = $r0, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    extfs $r3 = $r0, 47, 32
; CHECK-NEXT:    minw $r1 = $r1, 20
; CHECK-NEXT:    minw $r2 = $r2, 20
; CHECK-NEXT:    srad $r0 = $r0, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minw $r3 = $r3, 20
; CHECK-NEXT:    insf $r1 = $r2, 31, 16
; CHECK-NEXT:    minw $r0 = $r0, 20
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r3, 47, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r0, 63, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x i16> %a, i32 0
  %0 = icmp slt i16 %vecext, 20
  %cond = select i1 %0, i16 %vecext, i16 20
  %vecins = insertelement <4 x i16> undef, i16 %cond, i32 0
  %vecext.1 = extractelement <4 x i16> %a, i32 1
  %1 = icmp slt i16 %vecext.1, 20
  %cond.1 = select i1 %1, i16 %vecext.1, i16 20
  %vecins.1 = insertelement <4 x i16> %vecins, i16 %cond.1, i32 1
  %vecext.2 = extractelement <4 x i16> %a, i32 2
  %2 = icmp slt i16 %vecext.2, 20
  %cond.2 = select i1 %2, i16 %vecext.2, i16 20
  %vecins.2 = insertelement <4 x i16> %vecins.1, i16 %cond.2, i32 2
  %vecext.3 = extractelement <4 x i16> %a, i32 3
  %3 = icmp slt i16 %vecext.3, 20
  %cond.3 = select i1 %3, i16 %vecext.3, i16 20
  %vecins.3 = insertelement <4 x i16> %vecins.2, i16 %cond.3, i32 3
  ret <4 x i16> %vecins.3
}

define <4 x i16> @f6(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: f6:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    extfz $r1 = $r0, 15, 0
; CHECK-NEXT:    extfz $r2 = $r0, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    extfz $r3 = $r0, 47, 32
; CHECK-NEXT:    zxhd $r1 = $r1
; CHECK-NEXT:    srld $r0 = $r0, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    zxhd $r2 = $r2
; CHECK-NEXT:    zxhd $r3 = $r3
; CHECK-NEXT:    minuw $r1 = $r1, 20
; CHECK-NEXT:    ;;
; CHECK-NEXT:    minuw $r2 = $r2, 20
; CHECK-NEXT:    zxhd $r0 = $r0
; CHECK-NEXT:    minuw $r3 = $r3, 20
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r2, 31, 16
; CHECK-NEXT:    minuw $r0 = $r0, 20
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r3, 47, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r0, 63, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x i16> %a, i32 0
  %0 = icmp ult i16 %vecext, 20
  %cond = select i1 %0, i16 %vecext, i16 20
  %vecins = insertelement <4 x i16> undef, i16 %cond, i32 0
  %vecext.1 = extractelement <4 x i16> %a, i32 1
  %1 = icmp ult i16 %vecext.1, 20
  %cond.1 = select i1 %1, i16 %vecext.1, i16 20
  %vecins.1 = insertelement <4 x i16> %vecins, i16 %cond.1, i32 1
  %vecext.2 = extractelement <4 x i16> %a, i32 2
  %2 = icmp ult i16 %vecext.2, 20
  %cond.2 = select i1 %2, i16 %vecext.2, i16 20
  %vecins.2 = insertelement <4 x i16> %vecins.1, i16 %cond.2, i32 2
  %vecext.3 = extractelement <4 x i16> %a, i32 3
  %3 = icmp ult i16 %vecext.3, 20
  %cond.3 = select i1 %3, i16 %vecext.3, i16 20
  %vecins.3 = insertelement <4 x i16> %vecins.2, i16 %cond.3, i32 3
  ret <4 x i16> %vecins.3
}

