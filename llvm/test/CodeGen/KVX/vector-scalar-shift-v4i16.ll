; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -O2 | FileCheck %s
target triple = "kvx-kalray-cos"

define <4 x i16> @shiftR_imm(<4 x i16> %a){
; CHECK-LABEL: shiftR_imm:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    make $r1 = 0x3000300030003
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srahqs $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %shr = ashr <4 x i16> %a, <i16 3, i16 3, i16 3, i16 3>
  ret <4 x i16> %shr
}

define <4 x i16> @shiftL_imm(<4 x i16> %a){
; CHECK-LABEL: shiftL_imm:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    make $r1 = 0x3000300030003
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllhqs $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %shl = shl <4 x i16> %a, <i16 3, i16 3, i16 3, i16 3>
  ret <4 x i16> %shl
}

define <4 x i16> @shiftR(<4 x i16> %a, i32 %c){
; CHECK-LABEL: shiftR:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    insf $r1 = $r1, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r1, 63, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srahqs $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %0 = trunc i32 %c to i16
  %1 = insertelement <4 x i16> undef, i16 %0, i32 0
  %sh_prom = shufflevector <4 x i16> %1, <4 x i16> undef, <4 x i32> zeroinitializer
  %shr = ashr <4 x i16> %a, %sh_prom
  ret <4 x i16> %shr
}

define <4 x i16> @shiftL(<4 x i16> %a, i32 %c){
; CHECK-LABEL: shiftL:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    insf $r1 = $r1, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r1, 63, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllhqs $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %0 = trunc i32 %c to i16
  %1 = insertelement <4 x i16> undef, i16 %0, i32 0
  %sh_prom = shufflevector <4 x i16> %1, <4 x i16> undef, <4 x i32> zeroinitializer
  %shl = shl <4 x i16> %a, %sh_prom
  ret <4 x i16> %shl
}
