; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O3 -mcpu=kv3-2 -o - %s | FileCheck %s
; RUN: clang -march=kv3-2 -c -o /dev/null %s

target triple = "kvx-kalray-cos"

define i64 @get_0() {
; CHECK-LABEL: get_0:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $pc
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !2)
  ret i64 %1
}

declare i64 @llvm.read_volatile_register.i64(metadata)

define i64 @get_1() {
; CHECK-LABEL: get_1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ps
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !3)
  ret i64 %1
}

define i64 @get_2() {
; CHECK-LABEL: get_2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $pcr
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !4)
  ret i64 %1
}

define i64 @get_3() {
; CHECK-LABEL: get_3:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ra
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !5)
  ret i64 %1
}

define i64 @get_4() {
; CHECK-LABEL: get_4:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $cs
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !6)
  ret i64 %1
}

define i64 @get_5() {
; CHECK-LABEL: get_5:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $csit
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !7)
  ret i64 %1
}

define i64 @get_6() {
; CHECK-LABEL: get_6:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $aespc
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !8)
  ret i64 %1
}

define i64 @get_7() {
; CHECK-LABEL: get_7:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ls
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !9)
  ret i64 %1
}

define i64 @get_8() {
; CHECK-LABEL: get_8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $le
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !10)
  ret i64 %1
}

define i64 @get_9() {
; CHECK-LABEL: get_9:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $lc
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !11)
  ret i64 %1
}

define i64 @get_10() {
; CHECK-LABEL: get_10:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ipe
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !12)
  ret i64 %1
}

define i64 @get_11() {
; CHECK-LABEL: get_11:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $men
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !13)
  ret i64 %1
}

define i64 @get_12() {
; CHECK-LABEL: get_12:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $pmc
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !14)
  ret i64 %1
}

define i64 @get_13() {
; CHECK-LABEL: get_13:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $pm0
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !15)
  ret i64 %1
}

define i64 @get_14() {
; CHECK-LABEL: get_14:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $pm1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !16)
  ret i64 %1
}

define i64 @get_15() {
; CHECK-LABEL: get_15:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $pm2
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !17)
  ret i64 %1
}

define i64 @get_16() {
; CHECK-LABEL: get_16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $pm3
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !18)
  ret i64 %1
}

define i64 @get_17() {
; CHECK-LABEL: get_17:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $pmsa
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !19)
  ret i64 %1
}

define i64 @get_18() {
; CHECK-LABEL: get_18:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $tcr
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !20)
  ret i64 %1
}

define i64 @get_19() {
; CHECK-LABEL: get_19:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $t0v
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !21)
  ret i64 %1
}

define i64 @get_20() {
; CHECK-LABEL: get_20:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $t1v
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !22)
  ret i64 %1
}

define i64 @get_21() {
; CHECK-LABEL: get_21:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $t0r
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !23)
  ret i64 %1
}

define i64 @get_22() {
; CHECK-LABEL: get_22:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $t1r
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !24)
  ret i64 %1
}

define i64 @get_23() {
; CHECK-LABEL: get_23:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $wdv
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !25)
  ret i64 %1
}

define i64 @get_24() {
; CHECK-LABEL: get_24:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $wdr
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !26)
  ret i64 %1
}

define i64 @get_25() {
; CHECK-LABEL: get_25:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ile
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !27)
  ret i64 %1
}

define i64 @get_26() {
; CHECK-LABEL: get_26:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ill
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !28)
  ret i64 %1
}

define i64 @get_27() {
; CHECK-LABEL: get_27:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ilr
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !29)
  ret i64 %1
}

define i64 @get_28() {
; CHECK-LABEL: get_28:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $mmc
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !30)
  ret i64 %1
}

define i64 @get_29() {
; CHECK-LABEL: get_29:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $tel
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !31)
  ret i64 %1
}

define i64 @get_30() {
; CHECK-LABEL: get_30:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $teh
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !32)
  ret i64 %1
}

define i64 @get_31() {
; CHECK-LABEL: get_31:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ixc
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !33)
  ret i64 %1
}

define i64 @get_32() {
; CHECK-LABEL: get_32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $syo
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !34)
  ret i64 %1
}

define i64 @get_33() {
; CHECK-LABEL: get_33:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $hto
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !35)
  ret i64 %1
}

define i64 @get_34() {
; CHECK-LABEL: get_34:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ito
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !36)
  ret i64 %1
}

define i64 @get_35() {
; CHECK-LABEL: get_35:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $do
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !37)
  ret i64 %1
}

define i64 @get_36() {
; CHECK-LABEL: get_36:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $mo
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !38)
  ret i64 %1
}

define i64 @get_37() {
; CHECK-LABEL: get_37:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $pso
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !39)
  ret i64 %1
}

define i64 @get_38() {
; CHECK-LABEL: get_38:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s38
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !40)
  ret i64 %1
}

define i64 @get_39() {
; CHECK-LABEL: get_39:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s39
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !41)
  ret i64 %1
}

define i64 @get_41() {
; CHECK-LABEL: get_41:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $dba0
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !42)
  ret i64 %1
}

define i64 @get_42() {
; CHECK-LABEL: get_42:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $dba1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !43)
  ret i64 %1
}

define i64 @get_43() {
; CHECK-LABEL: get_43:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $dwa0
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !44)
  ret i64 %1
}

define i64 @get_44() {
; CHECK-LABEL: get_44:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $dwa1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !45)
  ret i64 %1
}

define i64 @get_45() {
; CHECK-LABEL: get_45:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $mes
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !46)
  ret i64 %1
}

define i64 @get_46() {
; CHECK-LABEL: get_46:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ws
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !47)
  ret i64 %1
}

define i64 @get_47() {
; CHECK-LABEL: get_47:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s47
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !48)
  ret i64 %1
}

define i64 @get_48() {
; CHECK-LABEL: get_48:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s48
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !49)
  ret i64 %1
}

define i64 @get_49() {
; CHECK-LABEL: get_49:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s49
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !50)
  ret i64 %1
}

define i64 @get_50() {
; CHECK-LABEL: get_50:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s50
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !51)
  ret i64 %1
}

define i64 @get_51() {
; CHECK-LABEL: get_51:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s51
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !52)
  ret i64 %1
}

define i64 @get_52() {
; CHECK-LABEL: get_52:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s52
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !53)
  ret i64 %1
}

define i64 @get_53() {
; CHECK-LABEL: get_53:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s53
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !54)
  ret i64 %1
}

define i64 @get_54() {
; CHECK-LABEL: get_54:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s54
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !55)
  ret i64 %1
}

define i64 @get_55() {
; CHECK-LABEL: get_55:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s55
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !56)
  ret i64 %1
}

define i64 @get_56() {
; CHECK-LABEL: get_56:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s56
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !57)
  ret i64 %1
}

define i64 @get_57() {
; CHECK-LABEL: get_57:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s57
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !58)
  ret i64 %1
}

define i64 @get_58() {
; CHECK-LABEL: get_58:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s58
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !59)
  ret i64 %1
}

define i64 @get_59() {
; CHECK-LABEL: get_59:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s59
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !60)
  ret i64 %1
}

define i64 @get_60() {
; CHECK-LABEL: get_60:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s60
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !61)
  ret i64 %1
}

define i64 @get_61() {
; CHECK-LABEL: get_61:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s61
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !62)
  ret i64 %1
}

define i64 @get_62() {
; CHECK-LABEL: get_62:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s62
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !63)
  ret i64 %1
}

define i64 @get_63() {
; CHECK-LABEL: get_63:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s63
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !64)
  ret i64 %1
}

define i64 @get_64() {
; CHECK-LABEL: get_64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $spc_pl0
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !65)
  ret i64 %1
}

define i64 @get_65() {
; CHECK-LABEL: get_65:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $spc_pl1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !66)
  ret i64 %1
}

define i64 @get_66() {
; CHECK-LABEL: get_66:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $spc_pl2
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !67)
  ret i64 %1
}

define i64 @get_67() {
; CHECK-LABEL: get_67:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $spc_pl3
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !68)
  ret i64 %1
}

define i64 @get_68() {
; CHECK-LABEL: get_68:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sps_pl0
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !69)
  ret i64 %1
}

define i64 @get_69() {
; CHECK-LABEL: get_69:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sps_pl1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !70)
  ret i64 %1
}

define i64 @get_70() {
; CHECK-LABEL: get_70:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sps_pl2
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !71)
  ret i64 %1
}

define i64 @get_71() {
; CHECK-LABEL: get_71:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sps_pl3
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !72)
  ret i64 %1
}

define i64 @get_72() {
; CHECK-LABEL: get_72:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ea_pl0
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !73)
  ret i64 %1
}

define i64 @get_73() {
; CHECK-LABEL: get_73:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ea_pl1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !74)
  ret i64 %1
}

define i64 @get_74() {
; CHECK-LABEL: get_74:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ea_pl2
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !75)
  ret i64 %1
}

define i64 @get_75() {
; CHECK-LABEL: get_75:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ea_pl3
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !76)
  ret i64 %1
}

define i64 @get_76() {
; CHECK-LABEL: get_76:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ev_pl0
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !77)
  ret i64 %1
}

define i64 @get_77() {
; CHECK-LABEL: get_77:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ev_pl1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !78)
  ret i64 %1
}

define i64 @get_78() {
; CHECK-LABEL: get_78:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ev_pl2
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !79)
  ret i64 %1
}

define i64 @get_79() {
; CHECK-LABEL: get_79:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ev_pl3
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !80)
  ret i64 %1
}

define i64 @get_80() {
; CHECK-LABEL: get_80:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sr_pl0
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !81)
  ret i64 %1
}

define i64 @get_81() {
; CHECK-LABEL: get_81:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sr_pl1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !82)
  ret i64 %1
}

define i64 @get_82() {
; CHECK-LABEL: get_82:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sr_pl2
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !83)
  ret i64 %1
}

define i64 @get_83() {
; CHECK-LABEL: get_83:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sr_pl3
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !84)
  ret i64 %1
}

define i64 @get_84() {
; CHECK-LABEL: get_84:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $es_pl0
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !85)
  ret i64 %1
}

define i64 @get_85() {
; CHECK-LABEL: get_85:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $es_pl1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !86)
  ret i64 %1
}

define i64 @get_86() {
; CHECK-LABEL: get_86:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $es_pl2
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !87)
  ret i64 %1
}

define i64 @get_87() {
; CHECK-LABEL: get_87:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $es_pl3
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !88)
  ret i64 %1
}

define i64 @get_88() {
; CHECK-LABEL: get_88:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s88
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !89)
  ret i64 %1
}

define i64 @get_89() {
; CHECK-LABEL: get_89:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s89
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !90)
  ret i64 %1
}

define i64 @get_90() {
; CHECK-LABEL: get_90:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s90
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !91)
  ret i64 %1
}

define i64 @get_91() {
; CHECK-LABEL: get_91:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s91
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !92)
  ret i64 %1
}

define i64 @get_92() {
; CHECK-LABEL: get_92:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s92
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !93)
  ret i64 %1
}

define i64 @get_93() {
; CHECK-LABEL: get_93:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s93
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !94)
  ret i64 %1
}

define i64 @get_94() {
; CHECK-LABEL: get_94:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s94
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !95)
  ret i64 %1
}

define i64 @get_95() {
; CHECK-LABEL: get_95:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s95
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !96)
  ret i64 %1
}

define i64 @get_104() {
; CHECK-LABEL: get_104:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s104
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !97)
  ret i64 %1
}

define i64 @get_105() {
; CHECK-LABEL: get_105:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s105
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !98)
  ret i64 %1
}

define i64 @get_106() {
; CHECK-LABEL: get_106:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s106
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !99)
  ret i64 %1
}

define i64 @get_107() {
; CHECK-LABEL: get_107:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s107
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !100)
  ret i64 %1
}

define i64 @get_128() {
; CHECK-LABEL: get_128:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $spc
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !101)
  ret i64 %1
}

define i64 @get_132() {
; CHECK-LABEL: get_132:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sps
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !102)
  ret i64 %1
}

define i64 @get_136() {
; CHECK-LABEL: get_136:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ea
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !103)
  ret i64 %1
}

define i64 @get_140() {
; CHECK-LABEL: get_140:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $ev
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !104)
  ret i64 %1
}

define i64 @get_144() {
; CHECK-LABEL: get_144:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $sr
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !105)
  ret i64 %1
}

define i64 @get_148() {
; CHECK-LABEL: get_148:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $es
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !106)
  ret i64 %1
}

define i64 @get_152() {
; CHECK-LABEL: get_152:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s152
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !107)
  ret i64 %1
}

define i64 @get_156() {
; CHECK-LABEL: get_156:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s156
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !108)
  ret i64 %1
}

define i64 @get_168() {
; CHECK-LABEL: get_168:
; CHECK:       # %bb.0:
; CHECK-NEXT:    get $r0 = $s168
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = call i64 @llvm.read_volatile_register.i64(metadata !109)
  ret i64 %1
}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!""}
!2 = !{!"$pc"}
!3 = !{!"$ps"}
!4 = !{!"$pcr"}
!5 = !{!"$ra"}
!6 = !{!"$cs"}
!7 = !{!"$csit"}
!8 = !{!"$aespc"}
!9 = !{!"$ls"}
!10 = !{!"$le"}
!11 = !{!"$lc"}
!12 = !{!"$ipe"}
!13 = !{!"$men"}
!14 = !{!"$pmc"}
!15 = !{!"$pm0"}
!16 = !{!"$pm1"}
!17 = !{!"$pm2"}
!18 = !{!"$pm3"}
!19 = !{!"$pmsa"}
!20 = !{!"$tcr"}
!21 = !{!"$t0v"}
!22 = !{!"$t1v"}
!23 = !{!"$t0r"}
!24 = !{!"$t1r"}
!25 = !{!"$wdv"}
!26 = !{!"$wdr"}
!27 = !{!"$ile"}
!28 = !{!"$ill"}
!29 = !{!"$ilr"}
!30 = !{!"$mmc"}
!31 = !{!"$tel"}
!32 = !{!"$teh"}
!33 = !{!"$ixc"}
!34 = !{!"$syo"}
!35 = !{!"$hto"}
!36 = !{!"$ito"}
!37 = !{!"$do"}
!38 = !{!"$mo"}
!39 = !{!"$pso"}
!40 = !{!"$s38"}
!41 = !{!"$s39"}
!42 = !{!"$dba0"}
!43 = !{!"$dba1"}
!44 = !{!"$dwa0"}
!45 = !{!"$dwa1"}
!46 = !{!"$mes"}
!47 = !{!"$ws"}
!48 = !{!"$s47"}
!49 = !{!"$s48"}
!50 = !{!"$s49"}
!51 = !{!"$s50"}
!52 = !{!"$s51"}
!53 = !{!"$s52"}
!54 = !{!"$s53"}
!55 = !{!"$s54"}
!56 = !{!"$s55"}
!57 = !{!"$s56"}
!58 = !{!"$s57"}
!59 = !{!"$s58"}
!60 = !{!"$s59"}
!61 = !{!"$s60"}
!62 = !{!"$s61"}
!63 = !{!"$s62"}
!64 = !{!"$s63"}
!65 = !{!"$spc_pl0"}
!66 = !{!"$spc_pl1"}
!67 = !{!"$spc_pl2"}
!68 = !{!"$spc_pl3"}
!69 = !{!"$sps_pl0"}
!70 = !{!"$sps_pl1"}
!71 = !{!"$sps_pl2"}
!72 = !{!"$sps_pl3"}
!73 = !{!"$ea_pl0"}
!74 = !{!"$ea_pl1"}
!75 = !{!"$ea_pl2"}
!76 = !{!"$ea_pl3"}
!77 = !{!"$ev_pl0"}
!78 = !{!"$ev_pl1"}
!79 = !{!"$ev_pl2"}
!80 = !{!"$ev_pl3"}
!81 = !{!"$sr_pl0"}
!82 = !{!"$sr_pl1"}
!83 = !{!"$sr_pl2"}
!84 = !{!"$sr_pl3"}
!85 = !{!"$es_pl0"}
!86 = !{!"$es_pl1"}
!87 = !{!"$es_pl2"}
!88 = !{!"$es_pl3"}
!89 = !{!"$s88"}
!90 = !{!"$s89"}
!91 = !{!"$s90"}
!92 = !{!"$s91"}
!93 = !{!"$s92"}
!94 = !{!"$s93"}
!95 = !{!"$s94"}
!96 = !{!"$s95"}
!97 = !{!"$s104"}
!98 = !{!"$s105"}
!99 = !{!"$s106"}
!100 = !{!"$s107"}
!101 = !{!"$spc"}
!102 = !{!"$sps"}
!103 = !{!"$ea"}
!104 = !{!"$ev"}
!105 = !{!"$sr"}
!106 = !{!"$es"}
!107 = !{!"$s152"}
!108 = !{!"$s156"}
!109 = !{!"$s168"}
