; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs -o - %s -O2 | FileCheck %s
; RUN: clang -O2 -c -o /dev/null %s

target triple = "kvx-kalray-cos"

@a = global i32 0, align 4

define i32 @add_pm0() {
; CHECK-LABEL: add_pm0:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    get $r0 = $pm0
; CHECK-NEXT:    make $r1 = a
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    lwz $r2 = 0[$r1]
; CHECK-NEXT:    ;; # (end cycle 1)
; CHECK-NEXT:    addw $r0 = $r2, $r0
; CHECK-NEXT:    ;; # (end cycle 4)
; CHECK-NEXT:    sw 0[$r1] = $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 5)
entry:
  %0 = tail call i64 @llvm.read_register.i64(metadata !0)
  %1 = load i32, ptr @a, align 4
  %2 = trunc i64 %0 to i32
  %conv1 = add i32 %1, %2
  store i32 %conv1, ptr @a, align 4
  ret i32 undef
}

declare i64 @llvm.read_register.i64(metadata)

!0 = !{!"$pm0"}
