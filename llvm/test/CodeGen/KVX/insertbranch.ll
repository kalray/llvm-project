; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -O3 | FileCheck %s
target triple = "kvx-kalray-cos"

@global = common global i32 0, align 4

define i32 @foo(i32 %a){
; CHECK-LABEL: foo:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addd $r12 = $r12, -32
; CHECK-NEXT:    get $r16 = $ra
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_def_cfa_offset 32
; CHECK-NEXT:    .cfi_register 67, 16
; CHECK-NEXT:    sd 24[$r12] = $r16
; CHECK-NEXT:    make $r2 = global
; CHECK-NEXT:    ;;
; CHECK-NEXT:    .cfi_offset 67, -8
; CHECK-NEXT:    lwz $r1 = 0[$r2]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    addx2w $r1 = $r0, $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sw 0[$r2] = $r1
; CHECK-NEXT:    cb.weqz $r0 ? .LBB0_2
; CHECK-NEXT:    ;;
; CHECK-NEXT:  # %bb.1: # %if.else
; CHECK-NEXT:    addw $r0 = $r0, -1
; CHECK-NEXT:    call foo
; CHECK-NEXT:    ;;
; CHECK-NEXT:    addw $r0 = $r0, -1
; CHECK-NEXT:    ld $r16 = 24[$r12]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    set $ra = $r16
; CHECK-NEXT:    addd $r12 = $r12, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
; CHECK-NEXT:  .LBB0_2: # %return
; CHECK-NEXT:    copyd $r0 = $r1
; CHECK-NEXT:    ld $r16 = 24[$r12]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    set $ra = $r16
; CHECK-NEXT:    addd $r12 = $r12, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %0 = load i32, i32* @global, align 4
  %mul = shl nsw i32 %a, 1
  %add = add nsw i32 %0, %mul
  store i32 %add, i32* @global, align 4
  %cmp = icmp eq i32 %a, 0
  br i1 %cmp, label %return, label %if.else

if.else:
  %sub = add nsw i32 %a, -1
  %call = tail call i32 @foo(i32 %sub)
  %sub1 = add nsw i32 %call, -1
  ret i32 %sub1

return:
  ret i32 %add
}

