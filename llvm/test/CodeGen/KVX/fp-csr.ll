; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O3 -o - %s | FileCheck %s
target triple = "kvx-kalray-cos"

define i32 @foo(i32 %n, i32 %m) {
; CHECK-LABEL: foo:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addd $r12 = $r12, -32
; CHECK-NEXT:    get $r16 = $ra
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sd 24[$r12] = $r16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sd 16[$r12] = $r14
; CHECK-NEXT:    addd $r14 = $r12, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sq 0[$r12] = $r18r19
; CHECK-NEXT:    zxwd $r0 = $r0
; CHECK-NEXT:    copyd $r18 = $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    addx4d $r0 = $r0, 31
; CHECK-NEXT:    ;;
; CHECK-NEXT:    clrf $r0 = $r0, 4, 34
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sbfd $r19 = $r0, $r12
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r19
; CHECK-NEXT:    copyd $r12 = $r19
; CHECK-NEXT:    call bar
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sxwd $r0 = $r18
; CHECK-NEXT:    ;;
; CHECK-NEXT:    lwz.xs $r0 = $r0[$r19]
; CHECK-NEXT:    addd $r12 = $r14, -16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    lq $r18r19 = 0[$r12]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    ld $r14 = 16[$r12]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    ld $r16 = 24[$r12]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    set $ra = $r16
; CHECK-NEXT:    addd $r12 = $r12, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %0 = zext i32 %n to i64
  %vla = alloca i32, i64 %0, align 4
  call void @bar(i32* nonnull %vla)
  %idxprom = sext i32 %m to i64
  %arrayidx = getelementptr inbounds i32, i32* %vla, i64 %idxprom
  %1 = load i32, i32* %arrayidx, align 4
  ret i32 %1
}

declare void @bar(i32*)
