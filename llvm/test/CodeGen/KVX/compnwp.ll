; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -O2 | FileCheck %s
target triple = "kvx-kalray-cos"

define <2 x i32> @eq(<2 x i32> %a, <2 x i32> %b){
; CHECK-LABEL: eq:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnwp.eq $r0 = $r0, $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllwps $r0 = $r0, 31
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srawps $r0 = $r0, 31
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %cmp = icmp eq <2 x i32> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i32>
  ret <2 x i32> %sext
}

define <2 x i32> @neq(<2 x i32> %a, <2 x i32> %b){
; CHECK-LABEL: neq:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnwp.ne $r0 = $r0, $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllwps $r0 = $r0, 31
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srawps $r0 = $r0, 31
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %cmp = icmp ne <2 x i32> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i32>
  ret <2 x i32> %sext
}

define <2 x i32> @gt(<2 x i32> %a, <2 x i32> %b){
; CHECK-LABEL: gt:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnwp.gt $r0 = $r0, $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllwps $r0 = $r0, 31
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srawps $r0 = $r0, 31
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %cmp = icmp sgt <2 x i32> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i32>
  ret <2 x i32> %sext
}

define <2 x i32> @lt(<2 x i32> %a, <2 x i32> %b){
; CHECK-LABEL: lt:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnwp.lt $r0 = $r0, $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllwps $r0 = $r0, 31
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srawps $r0 = $r0, 31
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %cmp = icmp slt <2 x i32> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i32>
  ret <2 x i32> %sext
}

define <2 x i32> @gte(<2 x i32> %a, <2 x i32> %b){
; CHECK-LABEL: gte:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnwp.ge $r0 = $r0, $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllwps $r0 = $r0, 31
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srawps $r0 = $r0, 31
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %cmp = icmp sge <2 x i32> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i32>
  ret <2 x i32> %sext
}

define <2 x i32> @lte(<2 x i32> %a, <2 x i32> %b){
; CHECK-LABEL: lte:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    compnwp.le $r0 = $r0, $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllwps $r0 = $r0, 31
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srawps $r0 = $r0, 31
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %cmp = icmp sle <2 x i32> %a, %b
  %sext = sext <2 x i1> %cmp to <2 x i32>
  ret <2 x i32> %sext
}

