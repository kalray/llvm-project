; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc %s -o - | FileCheck %s
; RUN: clang -c -o /dev/null %s

target triple = "kvx-kalray-cos"

define double @asm_memory_operand_m() {
; CHECK-LABEL: asm_memory_operand_m:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addd $r12 = $r12, -32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    addd $r0 = $r12, 24
; CHECK-NEXT:    ;;
; CHECK-NEXT:    #APP
; CHECK-NEXT:    ld $r0 = 0[$r0]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    addd $r12 = $r12, 32
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = alloca i64, align 8
  %2 = bitcast i64* %1 to i8*
  %3 = call double asm sideeffect "ld $0 = $1", "=r,*m"(i64* nonnull %1)
  ret double %3
}

define double @asm_memory_operand_m2() {
; CHECK-LABEL: asm_memory_operand_m2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addd $r12 = $r12, -32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    addd $r0 = $r12, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    #APP
; CHECK-NEXT:    ld $r0 = 0[$r0]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    addd $r12 = $r12, 32
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %1 = alloca [2 x i64], align 8
  %2 = bitcast [2 x i64]* %1 to i8*
  %3 = call double asm sideeffect "ld $0 = $1", "=r,*o"([2 x i64]* nonnull %1)
  ret double %3
}
