; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -O2 | FileCheck %s
target triple = "kvx-kalray-cos"

define <2 x i32> @shiftR_imm(<2 x i32> %a){
; CHECK-LABEL: shiftR_imm:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    make $r1 = 0x300000003
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srawps $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %shr = ashr <2 x i32> %a, <i32 3, i32 3>
  ret <2 x i32> %shr
}

define <2 x i32> @shiftL_imm(<2 x i32> %a){
; CHECK-LABEL: shiftL_imm:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    make $r1 = 0x300000003
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllwps $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %shl = shl <2 x i32> %a, <i32 3, i32 3>
  ret <2 x i32> %shl
}

define <2 x i32> @shiftR(<2 x i32> %a, i32 %c){
; CHECK-LABEL: shiftR:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    insf $r1 = $r1, 63, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srawps $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %splat.splatinsert = insertelement <2 x i32> undef, i32 %c, i32 0
  %splat.splat = shufflevector <2 x i32> %splat.splatinsert, <2 x i32> undef, <2 x i32> zeroinitializer
  %shr = ashr <2 x i32> %a, %splat.splat
  ret <2 x i32> %shr
}

define <2 x i32> @shiftL(<2 x i32> %a, i32 %c){
; CHECK-LABEL: shiftL:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    insf $r1 = $r1, 63, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllwps $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %splat.splatinsert = insertelement <2 x i32> undef, i32 %c, i32 0
  %splat.splat = shufflevector <2 x i32> %splat.splatinsert, <2 x i32> undef, <2 x i32> zeroinitializer
  %shl = shl <2 x i32> %a, %splat.splat
  ret <2 x i32> %shl
}

