; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -o - %s -O2 | FileCheck %s --check-prefixes=CHECK
; RUN: llc -mcpu=kv3-2 -o - %s -O2 | FileCheck %s --check-prefixes=CHECK

target triple = "kvx-kalray-cos"

define i64 @f_andndrr(i64 %a, i64 %b){
; CHECK-LABEL: f_andndrr:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    andnd $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %not_a = xor i64 %a, -1
  %and = and i64 %not_a, %b
  ret i64 %and
}

define i64 @f_andndri10(i64 %a){
; CHECK-LABEL: f_andndri10:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    andnd $r0 = $r0, 10
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %not_a = xor i64 %a, -1
  %and = and i64 %not_a, 10
  ret i64 %and
}

define i64 @f_andndri37(i64 %a){
; CHECK-LABEL: f_andndri37:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    andnd $r0 = $r0, 0xfffffffff
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %not_a = xor i64 %a, -1
  %and = and i64 %not_a, 68719476735
  ret i64 %and
}

define i64 @f_andndri64(i64 %a){
; CHECK-LABEL: f_andndri64:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    andnd $r0 = $r0, 0x3fffffffff
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %not_a = xor i64 %a, -1
  %and = and i64 %not_a, 274877906943
  ret i64 %and
}

