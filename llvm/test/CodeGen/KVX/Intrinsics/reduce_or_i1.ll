; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mcpu=kv3-1 -O2 -o - %s | FileCheck %s --check-prefixes=ALL,CV1
; RUN: llc -mcpu=kv3-2 -O2 -o - %s | FileCheck %s --check-prefixes=ALL,CV2
; RUN: clang -O2 -march=kv3-1 -c -o /dev/null %s
; RUN: clang -O2 -march=kv3-2 -c -o /dev/null %s

target triple = "kvx-kalray-cos"

declare i1 @llvm.vector.reduce.or.v8i1(<8 x i1>)

define i32 @reduction_logical_or_01(<8 x i32> %v0, <8 x i32> %v1, <8 x i32> %v2) {
; ALL-LABEL: reduction_logical_or_01:
; ALL:       # %bb.0:
; ALL-NEXT:    ord $r0 = $r0, $r4
; ALL-NEXT:    ord $r1 = $r1, $r5
; ALL-NEXT:    ord $r2 = $r2, $r6
; ALL-NEXT:    ord $r3 = $r3, $r7
; ALL-NEXT:    ;; # (end cycle 0)
; ALL-NEXT:    ord $r0 = $r8, $r0
; ALL-NEXT:    ord $r1 = $r9, $r1
; ALL-NEXT:    ord $r2 = $r10, $r2
; ALL-NEXT:    ord $r3 = $r11, $r3
; ALL-NEXT:    ;; # (end cycle 1)
; ALL-NEXT:    ord $r0 = $r0, $r2
; ALL-NEXT:    ord $r1 = $r1, $r3
; ALL-NEXT:    ;; # (end cycle 2)
; ALL-NEXT:    lord $r0 = $r0, $r1
; ALL-NEXT:    ret
; ALL-NEXT:    ;; # (end cycle 3)
  %cmp0 = icmp ne <8 x i32> %v0, zeroinitializer
  %cmp1 = icmp ne <8 x i32> %v1, zeroinitializer
  %slt0 = select <8 x i1> %cmp0, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>, <8 x i1> %cmp1
  %cmp2 = icmp ne <8 x i32> %v2, zeroinitializer
  %slt2 = select <8 x i1> %slt0, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>, <8 x i1> %cmp2
  %orr = tail call i1 @llvm.vector.reduce.or.v8i1(<8 x i1> %slt2)
  %ret = zext i1 %orr to i32
  ret i32 %ret
}
; CV1: {{.*}}
; CV2: {{.*}}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; CV1: {{.*}}
; CV2: {{.*}}
