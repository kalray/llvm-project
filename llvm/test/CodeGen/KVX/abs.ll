; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -O2 | FileCheck %s
target triple = "kvx-kalray-cos"

define i32 @absw(i32 %a){
; CHECK-LABEL: absw:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    absw $r0 = $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %0 = icmp slt i32 %a, 0
  %neg = sub nsw i32 0, %a
  %1 = select i1 %0, i32 %neg, i32 %a
  ret i32 %1
}

define i64 @absd(i64 %a){
; CHECK-LABEL: absd:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    absd $r0 = $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %0 = icmp slt i64 %a, 0
  %neg = sub nsw i64 0, %a
  %1 = select i1 %0, i64 %neg, i64 %a
  ret i64 %1
}

define <2 x i32> @abswp1(<2 x i32> %a){
; CHECK-LABEL: abswp1:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    absw $r1 = $r0
; CHECK-NEXT:    srad $r0 = $r0, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    absw $r0 = $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r0, 63, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <2 x i32> %a, i32 0
  %0 = icmp slt i32 %vecext, 0
  %neg = sub nsw i32 0, %vecext
  %1 = select i1 %0, i32 %neg, i32 %vecext
  %vecins = insertelement <2 x i32> undef, i32 %1, i32 0
  %vecext.1 = extractelement <2 x i32> %a, i32 1
  %2 = icmp slt i32 %vecext.1, 0
  %neg.1 = sub nsw i32 0, %vecext.1
  %3 = select i1 %2, i32 %neg.1, i32 %vecext.1
  %vecins.1 = insertelement <2 x i32> %vecins, i32 %3, i32 1
  ret <2 x i32> %vecins.1
}

define <2 x i32> @abswp2(<2 x i32> %a){
; CHECK-LABEL: abswp2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    absw $r1 = $r0
; CHECK-NEXT:    srad $r0 = $r0, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    absw $r0 = $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r0, 63, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <2 x i32> %a, i32 0
  %0 = icmp slt i32 %vecext, 0
  %neg = sub nsw i32 0, %vecext
  %1 = select i1 %0, i32 %neg, i32 %vecext
  %vecins = insertelement <2 x i32> undef, i32 %1, i32 0
  %vecext1 = extractelement <2 x i32> %a, i32 1
  %2 = icmp slt i32 %vecext1, 0
  %neg8 = sub nsw i32 0, %vecext1
  %3 = select i1 %2, i32 %neg8, i32 %vecext1
  %vecins3 = insertelement <2 x i32> %vecins, i32 %3, i32 1
  ret <2 x i32> %vecins3
}

define <4 x i16> @abshq1(<4 x i16> %a){
; CHECK-LABEL: abshq1:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    extfs $r1 = $r0, 15, 0
; CHECK-NEXT:    extfs $r2 = $r0, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    extfs $r3 = $r0, 47, 32
; CHECK-NEXT:    absw $r1 = $r1
; CHECK-NEXT:    srad $r0 = $r0, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    absw $r2 = $r2
; CHECK-NEXT:    absw $r3 = $r3
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r2, 31, 16
; CHECK-NEXT:    absw $r0 = $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r3, 47, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r0, 63, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x i16> %a, i32 0
  %0 = icmp slt i16 %vecext, 0
  %neg = sub i16 0, %vecext
  %1 = select i1 %0, i16 %neg, i16 %vecext
  %vecins = insertelement <4 x i16> undef, i16 %1, i32 0
  %vecext.1 = extractelement <4 x i16> %a, i32 1
  %2 = icmp slt i16 %vecext.1, 0
  %neg.1 = sub i16 0, %vecext.1
  %3 = select i1 %2, i16 %neg.1, i16 %vecext.1
  %vecins.1 = insertelement <4 x i16> %vecins, i16 %3, i32 1
  %vecext.2 = extractelement <4 x i16> %a, i32 2
  %4 = icmp slt i16 %vecext.2, 0
  %neg.2 = sub i16 0, %vecext.2
  %5 = select i1 %4, i16 %neg.2, i16 %vecext.2
  %vecins.2 = insertelement <4 x i16> %vecins.1, i16 %5, i32 2
  %vecext.3 = extractelement <4 x i16> %a, i32 3
  %6 = icmp slt i16 %vecext.3, 0
  %neg.3 = sub i16 0, %vecext.3
  %7 = select i1 %6, i16 %neg.3, i16 %vecext.3
  %vecins.3 = insertelement <4 x i16> %vecins.2, i16 %7, i32 3
  ret <4 x i16> %vecins.3
}

define <4 x i16> @abshq2(<4 x i16> %a, <4 x i16> %b){
; CHECK-LABEL: abshq2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    extfs $r1 = $r0, 15, 0
; CHECK-NEXT:    extfs $r2 = $r0, 31, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    extfs $r3 = $r0, 47, 32
; CHECK-NEXT:    absw $r1 = $r1
; CHECK-NEXT:    srad $r0 = $r0, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    absw $r2 = $r2
; CHECK-NEXT:    absw $r3 = $r3
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r2, 31, 16
; CHECK-NEXT:    absw $r0 = $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r3, 47, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    insf $r1 = $r0, 63, 48
; CHECK-NEXT:    ;;
; CHECK-NEXT:    copyd $r0 = $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x i16> %a, i32 0
  %0 = icmp slt i16 %vecext, 0
  %neg = sub i16 0, %vecext
  %1 = select i1 %0, i16 %neg, i16 %vecext
  %vecins = insertelement <4 x i16> undef, i16 %1, i32 0
  %vecext2 = extractelement <4 x i16> %a, i32 1
  %2 = icmp slt i16 %vecext2, 0
  %neg25 = sub i16 0, %vecext2
  %3 = select i1 %2, i16 %neg25, i16 %vecext2
  %vecins6 = insertelement <4 x i16> %vecins, i16 %3, i32 1
  %vecext7 = extractelement <4 x i16> %a, i32 2
  %4 = icmp slt i16 %vecext7, 0
  %neg26 = sub i16 0, %vecext7
  %5 = select i1 %4, i16 %neg26, i16 %vecext7
  %vecins11 = insertelement <4 x i16> %vecins6, i16 %5, i32 2
  %vecext12 = extractelement <4 x i16> %a, i32 3
  %6 = icmp slt i16 %vecext12, 0
  %neg27 = sub i16 0, %vecext12
  %7 = select i1 %6, i16 %neg27, i16 %vecext12
  %vecins16 = insertelement <4 x i16> %vecins11, i16 %7, i32 3
  ret <4 x i16> %vecins16
}
