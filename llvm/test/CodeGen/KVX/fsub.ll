; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O2 -o - %s | FileCheck %s
target triple = "kvx-kalray-cos"

define half @sub_f16_f16(half %0, half %1) {
; CHECK-LABEL: sub_f16_f16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    zxhd $r0 = $r0
; CHECK-NEXT:    zxhd $r1 = $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    fsbfhq $r0 = $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %3 = fsub half %0, %1
  ret half %3
}

define <2 x half> @sub_v2f16_v2f16(<2 x half> %0, <2 x half> %1) {
; CHECK-LABEL: sub_v2f16_v2f16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    zxwd $r0 = $r0
; CHECK-NEXT:    zxwd $r1 = $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    fsbfhq $r0 = $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %3 = fsub <2 x half> %0, %1
  ret <2 x half> %3
}

define <4 x half> @sub_v4f16_v4f16(<4 x half> %0, <4 x half> %1) {
; CHECK-LABEL: sub_v4f16_v4f16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fsbfhq $r0 = $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %3 = fsub <4 x half> %0, %1
  ret <4 x half> %3
}


define float @sub_f32_f32(float %0, float %1) {
; CHECK-LABEL: sub_f32_f32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fsbfw $r0 = $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %3 = fsub float %0, %1
  ret float %3
}

define <2 x float> @sub_v2f32_v2f32(<2 x float> %0, <2 x float> %1) {
; CHECK-LABEL: sub_v2f32_v2f32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fsbfwp $r0 = $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %3 = fsub <2 x float> %0, %1
  ret <2 x float> %3
}

define <4 x float> @sub_v4f32_v4f32(<4 x float> %0, <4 x float> %1) {
; CHECK-LABEL: sub_v4f32_v4f32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fsbfwp $r0 = $r2, $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    fsbfwp $r1 = $r3, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %3 = fsub <4 x float> %0, %1
  ret <4 x float> %3
}


define double @sub_f64_f64(double %0, double %1) {
; CHECK-LABEL: sub_f64_f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fsbfd $r0 = $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %3 = fsub double %0, %1
  ret double %3
}

define <2 x double> @sub_v2f64_v2f64(<2 x double> %0, <2 x double> %1) {
; CHECK-LABEL: sub_v2f64_v2f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fsbfdp $r0r1 = $r2r3, $r0r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %3 = fsub <2 x double> %0, %1
  ret <2 x double> %3
}

define <4 x double> @sub_v4f64_v4f64(<4 x double> %0, <4 x double> %1) {
; CHECK-LABEL: sub_v4f64_v4f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fsbfdp $r2r3 = $r6r7, $r2r3
; CHECK-NEXT:    ;;
; CHECK-NEXT:    fsbfdp $r0r1 = $r4r5, $r0r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  %3 = fsub <4 x double> %0, %1
  ret <4 x double> %3
}
