; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -o - %s | FileCheck %s --check-prefixes=CHECK
; RUN: llc -mcpu=kv3-2 -o - %s | FileCheck %s --check-prefixes=CHECK
; RUN: clang -c -o /dev/null %s
; RUN: clang -march=kv3-2 -c -o /dev/null %s

target triple = "kvx-kalray-cos"

define void @_pocl_kernel_LUT_workgroup() {
; CHECK-LABEL: _pocl_kernel_LUT_workgroup:
; CHECK:       # %bb.0: # %pregion_for_entry.pregion_for_init104.i.i
; CHECK-NEXT:    make $r0 = 0x100000000
; CHECK-NEXT:    ;;
; CHECK-NEXT:  .LBB0_1: # %pregion_for_entry.for.cond.cleanup.postbarrier.i.i
; CHECK-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    lhz $r1 = 0[$r0]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sbmm8 $r1 = $r1, 0x200000001
; CHECK-NEXT:    ;;
; CHECK-NEXT:    addx2wp $r1 = $r1, $r0
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srad $r1 = $r1, 32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    zxwd $r1 = $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    lbz $r1 = 0[$r1]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sb 0[$r0] = $r1
; CHECK-NEXT:    goto .LBB0_1
; CHECK-NEXT:    ;;
pregion_for_entry.pregion_for_init104.i.i:
  br label %pregion_for_entry.entry.i.i

pregion_for_entry.entry.i.i:
  br i1 undef, label %pregion_for_entry.entry.i.i, label %pregion_for_end101.i.i

pregion_for_end101.i.i:
  br label %pregion_for_entry.for.cond.cleanup.postbarrier.i.i

pregion_for_entry.for.cond.cleanup.postbarrier.i.i:
  %0 = load <2 x i8>, <2 x i8> addrspace(1)* undef, align 2
  %1 = zext <2 x i8> %0 to <2 x i32>
  %2 = shl nuw nsw <2 x i32> %1, <i32 1, i32 1>
  %3 = or <2 x i32> %2, <i32 0, i32 1>
  %4 = extractelement <2 x i32> %3, i64 1
  %idxprom34.i.i = zext i32 %4 to i64
  %arrayidx35.i.i = getelementptr inbounds [512 x i8], [512 x i8] addrspace(3)* null, i64 0, i64 %idxprom34.i.i
  %5 = load i8, i8 addrspace(3)* %arrayidx35.i.i, align 1
  store i8 %5, i8 addrspace(1)* undef, align 1
  br label %pregion_for_entry.for.cond.cleanup.postbarrier.i.i
}
