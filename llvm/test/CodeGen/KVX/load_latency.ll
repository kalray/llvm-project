; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O3 -mcpu=kv3-1 -o - %s | FileCheck %s -check-prefix=CV1
; RUN: llc -O3 -mcpu=kv3-2 -o - %s | FileCheck %s -check-prefix=CV2
; RUN: clang -march=kv3-1 -c -o /dev/null %s
; RUN: clang -march=kv3-2 -c -o /dev/null %s

target triple = "kvx-kalray-cos"

; Test the latency of a cached load. Compiler should assume 3.
define i32 @cached_load(ptr %ptr, i32 %val){
; CV1-LABEL: cached_load:
; CV1:       # %bb.0:
; CV1-NEXT:    lwz $r0 = 0[$r0]
; CV1-NEXT:    ;; # (end cycle 0)
; CV1-NEXT:    addw $r0 = $r0, $r1
; CV1-NEXT:    ret
; CV1-NEXT:    ;; # (end cycle 3)
;
; CV2-LABEL: cached_load:
; CV2:       # %bb.0:
; CV2-NEXT:    lwz $r0 = 0[$r0]
; CV2-NEXT:    ;; # (end cycle 0)
; CV2-NEXT:    addw $r0 = $r0, $r1
; CV2-NEXT:    ret
; CV2-NEXT:    ;; # (end cycle 3)
  %loaded = load i32, ptr %ptr
  %ret = add i32 %loaded, %val
  ret i32 %ret
}

; Test the latency of an uncached load. Compiler should assume 22.
define i32 @uncached_load(ptr %ptr, i32 %val){
; CV1-LABEL: uncached_load:
; CV1:       # %bb.0:
; CV1-NEXT:    lwz.u $r0 = 0[$r0]
; CV1-NEXT:    ;; # (end cycle 0)
; CV1-NEXT:    addw $r0 = $r0, $r1
; CV1-NEXT:    ret
; CV1-NEXT:    ;; # (end cycle 23)
;
; CV2-LABEL: uncached_load:
; CV2:       # %bb.0:
; CV2-NEXT:    lwz.u $r0 = 0[$r0]
; CV2-NEXT:    ;; # (end cycle 0)
; CV2-NEXT:    addw $r0 = $r0, $r1
; CV2-NEXT:    ret
; CV2-NEXT:    ;; # (end cycle 22)
  %cast = addrspacecast ptr %ptr to ptr addrspace(256) ; ".u" modifier
  %loaded = load i32, ptr addrspace(256) %cast
  %ret = add i32 %loaded, %val
  ret i32 %ret
}

define i32 @uncached_silent_load(ptr %ptr, i32 %val){
; CV1-LABEL: uncached_silent_load:
; CV1:       # %bb.0:
; CV1-NEXT:    lwz.us $r0 = 0[$r0]
; CV1-NEXT:    ;; # (end cycle 0)
; CV1-NEXT:    addw $r0 = $r0, $r1
; CV1-NEXT:    ret
; CV1-NEXT:    ;; # (end cycle 23)
;
; CV2-LABEL: uncached_silent_load:
; CV2:       # %bb.0:
; CV2-NEXT:    lwz.us $r0 = 0[$r0]
; CV2-NEXT:    ;; # (end cycle 0)
; CV2-NEXT:    addw $r0 = $r0, $r1
; CV2-NEXT:    ret
; CV2-NEXT:    ;; # (end cycle 22)
  %cast = addrspacecast ptr %ptr to ptr addrspace(257) ; ".us" modifier
  %loaded = load i32, ptr addrspace(257) %cast
  %ret = add i32 %loaded, %val
  ret i32 %ret
}
