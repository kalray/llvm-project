; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc  -disable-kvx-hwloops=false -O3 -o - %s | FileCheck %s
; RUN: clang -mllvm -disable-kvx-hwloops=false -O3 -c -o /dev/null %s

target triple = "kvx-kalray-cos"


%struct.Image = type { i8*, i16, i16, i16, i16, i16 }

define void @has_no_empty_hwloops(%struct.Image* nocapture readonly %0, %struct.Image* nocapture %1) {
; CHECK-LABEL: has_no_empty_hwloops:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lhz $r0 = 10[$r0]
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    cb.weqz $r0 ? .LBB0_4
; CHECK-NEXT:    ;;
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    addw $r2 = $r0, -1
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    compw.ltu $r2 = $r2, 7
; CHECK-NEXT:    ;; # (end cycle 1)
; CHECK-NEXT:    cb.odd $r2 ? .LBB0_4
; CHECK-NEXT:    ;;
; CHECK-NEXT:  # %bb.2:
; CHECK-NEXT:    andw $r2 = $r0, 0xfff8
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    negw $r2 = $r2
; CHECK-NEXT:    ;; # (end cycle 1)
; CHECK-NEXT:  .LBB0_3: # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    addw $r2 = $r2, 8
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    cb.wnez $r2 ? .LBB0_3
; CHECK-NEXT:    ;;
; CHECK-NEXT:  .LBB0_4:
; CHECK-NEXT:    sh 10[$r1] = $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 0)
  %3 = getelementptr inbounds %struct.Image, %struct.Image* %0, i64 0, i32 2
  %4 = load i16, i16* %3, align 2
  %5 = zext i16 %4 to i32
  %6 = icmp eq i16 %4, 0
  %7 = add nsw i32 %5, -1
  %8 = icmp ult i32 %7, 7
  %9 = or i1 %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = and i32 %5, 65528
  br label %14

12:                                               ; preds = %14, %2
  %13 = getelementptr inbounds %struct.Image, %struct.Image* %1, i64 0, i32 2
  store i16 %4, i16* %13, align 2
  ret void

14:                                               ; preds = %14, %10
  %15 = phi i32 [ %11, %10 ], [ %16, %14 ]
  %16 = add i32 %15, -8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %12, label %14
}

