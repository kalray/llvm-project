; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
; RUN: llc -verify-machineinstrs -o - -stop-before=slotindexes %s | FileCheck %s

target triple = "kvx-kalray-cos"

define void @a() {
  ; CHECK-LABEL: name: a
  ; CHECK: bb.0 (%ir-block.0):
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   BUNDLE implicit-def $r0, implicit-def $r1 {
  ; CHECK-NEXT:     MCYCLESp 0
  ; CHECK-NEXT:     $r0 = MAKEi16 1
  ; CHECK-NEXT:     $r1 = MAKEi16 2
  ; CHECK-NEXT:   }
  ; CHECK-NEXT:   BUNDLE implicit-def $r1, implicit-def $r0, implicit killed $r0, implicit killed $r1 {
  ; CHECK-NEXT:     MCYCLESp 1
  ; CHECK-NEXT:     $r1 = CMOVEDrr killed $r0, killed $r1, $r0, 8
  ; CHECK-NEXT:     $r0 = MAKEi16 0
  ; CHECK-NEXT:   }
  ; CHECK-NEXT:   BUNDLE implicit-def $r1, implicit killed $r1 {
  ; CHECK-NEXT:     MCYCLESp 2
  ; CHECK-NEXT:     $r1 = COMPWri killed $r1, -2, 2
  ; CHECK-NEXT:   }
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1 (%ir-block.1):
  ; CHECK-NEXT:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; CHECK-NEXT:   liveins: $r0, $r1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   CB $r0, %bb.1, 8
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2 (%ir-block.9):
  ; CHECK-NEXT:   successors: %bb.2(0x7c000000), %bb.1(0x04000000)
  ; CHECK-NEXT:   liveins: $r0, $r1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   CB $r1, %bb.2, 6
  ; CHECK-NEXT:   GOTO %bb.1
  br label %1

1:
  %2 = add nuw nsw i8 0, 1
  %3 = urem i8 %2, 3
  %4 = icmp eq i8 %3, 1
  br i1 undef, label %12, label %5

5:
  %6 = select i1 %4, i32 1, i32 2
  %7 = select i1 false, i32 0, i32 %6
  %8 = add nsw i32 0, %7
  br label %9

9:
  %10 = phi i32 [ undef, %9 ], [ %8, %5 ]
  %11 = icmp slt i32 %10, -2
  br i1 %11, label %9, label %12

12:
  br label %1
}
