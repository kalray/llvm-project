; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mcpu=kv3-1 -O2 -o - %s | FileCheck %s --check-prefixes=V1
; RUN: llc -mcpu=kv3-2 -O2 -o - %s | FileCheck %s --check-prefixes=V2
target triple = "kvx-kalray-cos"

declare i64 @llvm.abs.i64(i64, i1 immarg)

define i32 @ABDSWrr(i32 %0, i32 %1) {
; V1-LABEL: ABDSWrr:
; V1:       # %bb.0:
; V1-NEXT:    sxwd $r1 = $r1
; V1-NEXT:    sxwd $r0 = $r0
; V1-NEXT:    ;;
; V1-NEXT:    abdd $r0 = $r0, $r1
; V1-NEXT:    ;;
; V1-NEXT:    minud $r0 = $r0, 0x7fffffff
; V1-NEXT:    ret
; V1-NEXT:    ;;
;
; V2-LABEL: ABDSWrr:
; V2:       # %bb.0:
; V2-NEXT:    abdsw $r0 = $r0, $r1
; V2-NEXT:    ret
; V2-NEXT:    ;;
  %3 = sext i32 %1 to i64
  %4 = sext i32 %0 to i64
  %5 = sub nsw i64 %3, %4
  %6 = tail call i64 @llvm.abs.i64(i64 %5, i1 true)
  %7 = icmp ult i64 %6, 2147483647
  %8 = select i1 %7, i64 %6, i64 2147483647
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

define i32 @ABDSWri(i32 %0) {
; V1-LABEL: ABDSWri:
; V1:       # %bb.0:
; V1-NEXT:    sxwd $r0 = $r0
; V1-NEXT:    ;;
; V1-NEXT:    abdd $r0 = $r0, 0x3039
; V1-NEXT:    ;;
; V1-NEXT:    minud $r0 = $r0, 0x7fffffff
; V1-NEXT:    ret
; V1-NEXT:    ;;
;
; V2-LABEL: ABDSWri:
; V2:       # %bb.0:
; V2-NEXT:    abdsw $r0 = $r0, 0x3039
; V2-NEXT:    ret
; V2-NEXT:    ;;
  %2 = sext i32 %0 to i64
  %3 = sub nsw i64 12345, %2
  %4 = tail call i64 @llvm.abs.i64(i64 %3, i1 true)
  %5 = icmp ult i64 %4, 2147483647
  %6 = select i1 %5, i64 %4, i64 2147483647
  %7 = trunc i64 %6 to i32
  ret i32 %7
}
