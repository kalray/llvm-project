; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O2 -relocation-model=pic -o - %s | FileCheck %s
; RUN: clang -O2 -c -o /dev/null %s -mllvm -relocation-model=pic

target triple = "kvx-kalray-cos"

%"class.std::exception" = type { i32 (...)** }

$_ZNSt9exceptionC2ERKS_ = comdat any

declare void @_ZNSt9exceptionD1Ev(%"class.std::exception"* nonnull dereferenceable(8)) unnamed_addr
declare void @_ZNSt9exceptionD0Ev(%"class.std::exception"* nonnull dereferenceable(8)) unnamed_addr
declare i8* @_ZNKSt9exception4whatEv(%"class.std::exception"* nonnull dereferenceable(8)) unnamed_addr

@_ZTVSt9exception = available_externally unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast (i8** @_ZTISt9exception to i8*), i8* bitcast (void (%"class.std::exception"*)* @_ZNSt9exceptionD1Ev to i8*), i8* bitcast (void (%"class.std::exception"*)* @_ZNSt9exceptionD0Ev to i8*), i8* bitcast (i8* (%"class.std::exception"*)* @_ZNKSt9exception4whatEv to i8*)] }, align 8
@_ZTISt9exception = external constant i8*

define linkonce_odr void @_ZNSt9exceptionC2ERKS_(i32 (...) *** %addr) unnamed_addr comdat align 2 {
; CHECK-LABEL: _ZNSt9exceptionC2ERKS_:
; CHECK:       # %bb.0:
; CHECK-NEXT:    pcrel $r1 = @gotaddr()
; CHECK-NEXT:    ;;
; CHECK-NEXT:    ld $r1 = @got( _ZTVSt9exception )[$r1]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    addd $r1 = $r1, 16
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sd 0[$r0] = $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9exception, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %addr, align 8
  ret void
}

