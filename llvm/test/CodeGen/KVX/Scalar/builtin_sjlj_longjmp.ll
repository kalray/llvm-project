; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=kvx -exception-model sjlj | FileCheck --check-prefixes=CHECK %s
; RUN: llc < %s -mtriple=kvx -relocation-model=pic -exception-model sjlj | FileCheck --check-prefixes=PIC %s

%struct.__jmp_buf_tag = type { [25 x i64], i64, [16 x i64] }

@buf = common global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 8

define void @f_longjump() noreturn {
; CHECK-LABEL: f_longjump:
; CHECK:       # %bb.0:
; CHECK-NEXT:    make $r0 = buf
; CHECK-NEXT:    addd $r12 = $r12, -32
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sd 24[$r12] = $r14
; CHECK-NEXT:    ;;
; CHECK-NEXT:    ld $r1 = 8[$r0]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    ld $r14 = 0[$r0]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    ld $r12 = 16[$r0]
; CHECK-NEXT:    ;;
; CHECK-NEXT:    igoto $r1
; CHECK-NEXT:    ;;
;
; PIC-LABEL: f_longjump:
; PIC:       # %bb.0:
; PIC-NEXT:    addd $r12 = $r12, -32
; PIC-NEXT:    ;;
; PIC-NEXT:    sd 24[$r12] = $r14
; PIC-NEXT:    pcrel $r0 = @gotaddr()
; PIC-NEXT:    ;;
; PIC-NEXT:    ld $r0 = @got( buf )[$r0]
; PIC-NEXT:    ;;
; PIC-NEXT:    ld $r1 = 8[$r0]
; PIC-NEXT:    ;;
; PIC-NEXT:    ld $r14 = 0[$r0]
; PIC-NEXT:    ;;
; PIC-NEXT:    ld $r12 = 16[$r0]
; PIC-NEXT:    ;;
; PIC-NEXT:    igoto $r1
; PIC-NEXT:    ;;



   tail call void @llvm.eh.sjlj.longjmp(i8* bitcast ([1 x %struct.__jmp_buf_tag]* @buf to i8*)) noreturn
   unreachable
}

declare void @llvm.eh.sjlj.longjmp(i8*) noreturn
