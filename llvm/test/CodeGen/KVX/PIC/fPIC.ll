; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O3 -o - -relocation-model=pic %s | FileCheck %s

target triple = "kvx-kalray-cos"

@g = external global i32, align 4

define i32 @mul(i32 %num) {
; CHECK-LABEL: mul:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pcrel $r1 = @gotaddr()
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ld $r1 = @got( g )[$r1]
; CHECK-NEXT:    ;; # (end cycle 1)
; CHECK-NEXT:    lwz $r1 = 0[$r1]
; CHECK-NEXT:    ;; # (end cycle 4)
; CHECK-NEXT:    mulw $r0 = $r1, $r0
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;; # (end cycle 7)
entry:
  %0 = load i32, ptr @g, align 4
  %mul = mul nsw i32 %0, %num
  ret i32 %mul
}

define weak i32 @weak() {
; CHECK-LABEL: weak:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pcrel $r1 = @gotaddr()
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    ld $r0 = @got( weak )[$r1]
; CHECK-NEXT:    ;; # (end cycle 1)
; CHECK-NEXT:    ld $r1 = @got( b )[$r1]
; CHECK-NEXT:    ;; # (end cycle 2)
; CHECK-NEXT:    igoto $r1
; CHECK-NEXT:    ;;
entry:
  %call = tail call i32 @b(ptr nonnull @weak)
  ret i32 undef
}

declare i32 @b(...) local_unnamed_addr

define i32 @main() {
; CHECK-LABEL: main:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    make $r1 = 5
; CHECK-NEXT:    addd $r12 = $r12, -64
; CHECK-NEXT:    get $r16 = $ra
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    sd 56[$r12] = $r16
; CHECK-NEXT:    addd $r0 = $r12, 16
; CHECK-NEXT:    call f
; CHECK-NEXT:    ;; # (end cycle 1)
; CHECK-NEXT:    make $r0 = 0
; CHECK-NEXT:    ld $r16 = 56[$r12]
; CHECK-NEXT:    ;; # (end cycle 0)
; CHECK-NEXT:    set $ra = $r16
; CHECK-NEXT:    addd $r12 = $r12, 64
; CHECK-NEXT:    ;; # (end cycle 5)
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %x = alloca [10 x i32], align 4
  call void @f(ptr nonnull %x, i32 5)
  ret i32 0
}

declare void @f(ptr, i32) local_unnamed_addr

