; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -o - %s -O2 | FileCheck %s --check-prefixes=CHECK
; RUN: llc -mcpu=kv3-2 -o - %s -O2 | FileCheck %s --check-prefixes=CHECK
target triple = "kvx-kalray-cos"

define half @f1(<4 x half> %v){
; CHECK-LABEL: f1:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x half> %v, i32 0
  ret half %vecext
}

define half @f2(<4 x half> %v){
; CHECK-LABEL: f2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    srlw $r0 = $r0, 16
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x half> %v, i32 1
  ret half %vecext
}

define half @f3(<4 x half> %v){
; CHECK-LABEL: f3:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    srld $r0 = $r0, 32
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x half> %v, i32 2
  ret half %vecext
}

define half @f4(<4 x half> %v){
; CHECK-LABEL: f4:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    srld $r0 = $r0, 48
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x half> %v, i32 3
  ret half %vecext
}

define half @fidx(<4 x half> %v, i32 %idx){
; CHECK-LABEL: fidx:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    sxwd $r1 = $r1
; CHECK-NEXT:    ;;
; CHECK-NEXT:    sllw $r1 = $r1, 4
; CHECK-NEXT:    ;;
; CHECK-NEXT:    srld $r0 = $r0, $r1
; CHECK-NEXT:    ret
; CHECK-NEXT:    ;;
entry:
  %vecext = extractelement <4 x half> %v, i32 %idx
  ret half %vecext
}

